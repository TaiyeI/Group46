[{"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\index.js":"1","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\App.js":"2","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\AppRouter.js":"3","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\reportWebVitals.js":"4","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\components\\Header.js":"5","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\components\\Sidebar.js":"6","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Login.js":"7","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Home.js":"8","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Registration.js":"9","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\AboutUs.js":"10","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\RenewableEnergy.js":"11","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Petitions.js":"12","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Donation.js":"13","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Tips.js":"14","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Quiz.js":"15","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\Quizhandler.jsx":"16","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\Questions.js":"17","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\QuestionHandler.jsx":"18","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\components\\Footer.js":"19","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\TipsComponents\\Likes.js":"20","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\TipsComponents\\AllTip.js":"21"},{"size":642,"mtime":1678398207186,"results":"22","hashOfConfig":"23"},{"size":3579,"mtime":1678414482444,"results":"24","hashOfConfig":"23"},{"size":1536,"mtime":1678398207084,"results":"25","hashOfConfig":"23"},{"size":375,"mtime":1678398207188,"results":"26","hashOfConfig":"23"},{"size":4180,"mtime":1678414482880,"results":"27","hashOfConfig":"23"},{"size":998,"mtime":1678398207183,"results":"28","hashOfConfig":"23"},{"size":3612,"mtime":1678398207095,"results":"29","hashOfConfig":"23"},{"size":7767,"mtime":1678414482616,"results":"30","hashOfConfig":"23"},{"size":5011,"mtime":1678398207149,"results":"31","hashOfConfig":"23"},{"size":1416,"mtime":1678414482581,"results":"32","hashOfConfig":"23"},{"size":21128,"mtime":1678398207156,"results":"33","hashOfConfig":"23"},{"size":1589,"mtime":1678398207097,"results":"34","hashOfConfig":"23"},{"size":1158,"mtime":1678398207089,"results":"35","hashOfConfig":"23"},{"size":83102,"mtime":1678414482711,"results":"36","hashOfConfig":"23"},{"size":1803,"mtime":1678415274165,"results":"37","hashOfConfig":"23"},{"size":2810,"mtime":1678419792151,"results":"38","hashOfConfig":"23"},{"size":557,"mtime":1678398207138,"results":"39","hashOfConfig":"23"},{"size":610,"mtime":1678398207130,"results":"40","hashOfConfig":"23"},{"size":1823,"mtime":1678398207182,"results":"41","hashOfConfig":"23"},{"size":1387,"mtime":1678398207164,"results":"42","hashOfConfig":"23"},{"size":21070,"mtime":1678414482789,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},"sfvzd",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"48"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"48"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"48"},"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\index.js",["118"],[],"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport AppRouter from './AppRouter';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    {/* <App /> needed to be app router*/}\r\n    <AppRouter />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\App.js",["119"],[],"// import logo from './logo.svg';\r\nimport \"./App.css\";\r\n\r\nimport { Link, Outlet, NavLink } from \"react-router-dom\"; /*added NavLink*/\r\nimport React, {createContext, useState} from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nexport default function App() {\r\n\r\n  const UserContext = createContext();\r\n  const [loggedInUser, setLoggedinUser] = useState(\"\");\r\n  // const UserContext = createContext();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <head><title>Group Project</title></head> */}\r\n\r\n      {/* <Header context={[loggedInUser, setLoggedinUser]}/> */}\r\n      <UserContext.Provider value={loggedInUser}>\r\n        <Header/>\r\n      </UserContext.Provider>\r\n      <nav className=\"App-nav\">\r\n        {/* <Link className=\"nav-link\" to={'/'}>Home</Link>\r\n        <Link className=\"nav-link\" to={'/renewable_energy'}>Renewable Energy</Link>\r\n        <Link className=\"nav-link\" to={'/petitions'}>Petitions</Link>\r\n        <Link className=\"nav-link\" to={'/tips'}>Saving Tips</Link>\r\n        <Link className=\"nav-link\" to={'/quiz'}>Quiz</Link>\r\n        <Link className=\"nav-link\" to={'/donations'}>Donate to Ideas</Link>\r\n        <Link className=\"nav-link\" to={'/about_us'}>About Us</Link>\r\n\r\n        <NavLink to={'/about_us'} className={({isActive}) => (isActive ? \"nav-link-active\" : \"nav-link\")}>test</NavLink> */}\r\n\r\n        {/* changed Link to NavLink */}\r\n        <NavLink\r\n          className={({ isActive }) =>\r\n            isActive ? \"nav-link-active\" : \"nav-link\"\r\n          }\r\n          to={\"/\"}\r\n        >\r\n          Home\r\n        </NavLink>\r\n        <NavLink\r\n          className={({ isActive }) =>\r\n            isActive ? \"nav-link-active\" : \"nav-link\"\r\n          }\r\n          to={\"/renewable_energy\"}\r\n        >\r\n          Renewable Energy\r\n        </NavLink>\r\n        <NavLink\r\n          className={({ isActive }) =>\r\n            isActive ? \"nav-link-active\" : \"nav-link\"\r\n          }\r\n          to={\"/petitions\"}\r\n        >\r\n          Petitions\r\n        </NavLink>\r\n        <NavLink\r\n          className={({ isActive }) =>\r\n            isActive ? \"nav-link-active\" : \"nav-link\"\r\n          }\r\n          to={\"/tips\"}\r\n        >\r\n          Saving Tips\r\n        </NavLink>\r\n        <NavLink\r\n          className={({ isActive }) =>\r\n            isActive ? \"nav-link-active\" : \"nav-link\"\r\n          }\r\n          to={\"/quiz\"}\r\n        >\r\n          Quiz\r\n        </NavLink>\r\n        <NavLink\r\n          className={({ isActive }) =>\r\n            isActive ? \"nav-link-active\" : \"nav-link\"\r\n          }\r\n          to={\"/donations\"}\r\n        >\r\n          Donate to Ideas\r\n        </NavLink>\r\n        <NavLink\r\n          className={({ isActive }) =>\r\n            isActive ? \"nav-link-active\" : \"nav-link\"\r\n          }\r\n          to={\"/about_us\"}\r\n        >\r\n          About Us\r\n        </NavLink>\r\n\r\n        {/* <Link className=\"nav-link\" to={'/register'}>Register</Link>\r\n        <Link className=\"nav-link\" to={'/login'}>Login</Link> */}\r\n        {/* <Link className=\"nav-link\" to={'/help'}>Help</Link> */}\r\n      </nav>\r\n      <main className=\"App-main\">\r\n        {/* <Sidebar/> */}\r\n        \r\n        {/* <Outlet context={[loggedInUser, setLoggedinUser]}/> */}\r\n        <UserContext.Provider value={loggedInUser}>\r\n          <Outlet context={[loggedInUser, setLoggedinUser]}/>\r\n        </UserContext.Provider>\r\n        <Sidebar />\r\n        {/* floating mainContent left fixed the problem */}\r\n      </main>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\n// export default App;\r\n","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\AppRouter.js",[],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\reportWebVitals.js",[],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\components\\Header.js",["120","121","122","123","124","125","126","127"],[],"// import React from \"react\";\r\n\r\n// export default function Header(){\r\n//     return (\r\n//         // <header className=\"App-header\">\r\n\r\n//         //     <h1>Group Project</h1>\r\n\r\n//         //     {/* <Link className=\"nav-link\" to={'/register'}>Register</Link>\r\n//         //     <Link className=\"nav-link\" to={'/login'}>Login</Link> */}\r\n//         // </header>\r\n\r\n//         <h1 className=\"App-header\">EnergyAware</h1>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserContext from '../App.js'\r\n\r\n// import {AO} from './AO';\r\n\r\nexport default function Header(/*{user}*/props){\r\n\r\n    // const {user} = props;\r\n    const {loggedInUser, setLoggedInUser} = props;\r\n    // const user = useContext(UserContext);\r\n    // console.log(\"user= \", user);\r\n\r\n    // const [loggedInUser, setLoggedinUser] = useOutletContext();\r\n    // const [loggedInUser, setLoggedinUser] = useState(\"\");\r\n    // const [loggedInUser, setLoggedinUser] = useContext();\r\n    // const [loggedInUser, setLoggedinUser] = user;\r\n\r\n    console.log(\"liu= \", loggedInUser);\r\n    // const [userdata, setUserdata] = useState(\"\");\r\n\r\n    // const refreshAO = () => {\r\n    //     if(loggedInUser!==\"\"){\r\n\r\n    //         console.log('loggedInUser = ', loggedInUser);\r\n\r\n    //         const jwt = sessionStorage.getItem('jwt');\r\n    //         console.log(jwt);\r\n    //         axios({\r\n    //             method: 'get',\r\n    //             url: 'http://localhost:8080/user/findByEmail',\r\n    //             params: {email: loggedInUser},\r\n    //             // params: {email: loggedInUser.email},\r\n    //             headers: {\"Authorization\" : `Bearer ${jwt}`}\r\n    //         }).then((response) => {\r\n    //             if (response.status === 200){\r\n    //                 console.log(response.data);\r\n    //                 console.log(response.data.userType);\r\n    //                 // setUserdata(response.data.userType);\r\n    //                 // setLoggedinUser();\r\n    //             }\r\n    //         }).catch(err => {\r\n    //             console.log(err.response);\r\n    //             // setUserdata(\"Data failure\");\r\n    //         })\r\n    //     }\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     // <AO/>\r\n    //     refreshAO();\r\n    // }, [loggedInUser]);\r\n\r\n    // if (loggedInUser===\"\") {\r\n    //   return <header className=\"App-header\">\r\n    //             <div className=\"AccountOptions\">\r\n    //                 <nav className=\"AO-nav\">\r\n    //                     <Link className=\"AO-link\" to={'/register'} /*onClick={refreshAO}*/>Sign Up</Link>\r\n    //                     <p className=\"AO-or\">or</p>\r\n    //                     <Link className=\"AO-link\" to={'/login'} /*onClick={refreshAO}*/>Login</Link>\r\n    //                 </nav>\r\n    //             </div>\r\n    //          </header>;\r\n    // } else{\r\n    //   return <header className=\"App-header\">\r\n    //             <div className=\"AccountOptions\">\r\n    //                 <nav className=\"AO-nav\">\r\n    //                     {/* <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n    //                     <p className=\"AO-or\">or</p>\r\n    //                     <Link className=\"AO-link\" to={'/login'}>Login</Link> */}\r\n    //                     <p>Log Out</p>\r\n    //                 </nav>\r\n    //             </div>\r\n    //         </header>;\r\n    // }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     <AO/>\r\n    // })\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            {/* refreshAO() */}\r\n            <span className=\"title\"><h1>EnergyAware</h1></span>\r\n            <span><div className=\"AccountOptions\">\r\n                {/* <nav className=\"AO-nav\">\r\n                    <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n                    <p className=\"AO-or\">or</p>\r\n                    <Link className=\"AO-link\" to={'/login'}>Login</Link>\r\n                </nav> */}\r\n\r\n                {/* <p>.{loggedInUser}.</p> */}\r\n\r\n            </div></span>\r\n        </header>\r\n    )\r\n}","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\components\\Sidebar.js",["128","129","130"],[],"import React from \"react\";\r\n\r\nexport default function Sidebar(){\r\n    return (\r\n        <aside className=\"sidebar\">\r\n           {/* <input className=\"search\" type=\"text\" id=\"search\" name=\"search\" placeholder=\"Search\"/> */}\r\n        \r\n            {/* <p className=\"sidebarcontent\">Side Stuff.</p> */}\r\n\r\n            <div className=\"sidebarcontent\">\r\n                <h3>Newsletter</h3><br/>\r\n                <p>lil' para</p><br/>\r\n                <p>Read the latest information and be kept up-to-date our current energy situation with our monthly Newsletters.</p>\r\n                <br/>\r\n\r\n                <a href=\"\">newsletter: 01/01/2023</a><br/><br/>\r\n                <a href=\"\">newsletter: 01/12/2022</a><br/><br/>\r\n\r\n                <p>Sign-up to receive our monthly newsletter emails <a href=\"\">here</a></p>\r\n\r\n                <br/>\r\n                <p><strong>What's going on in your area?</strong></p>\r\n                <p>currently ...</p>\r\n            </div>\r\n\r\n\r\n        </aside>\r\n    )\r\n}","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Login.js",[],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Home.js",["131"],[],"import React, {useContext} from \"react\";\r\nimport { Link, useNavigate, useOutletContext } from \"react-router-dom\";\r\n\r\nimport \"./Home.css\";\r\n\r\nimport UserContext from '../App.js';\r\n\r\n\r\nimport Header from '../components/Header.js';\r\n\r\nexport default function Home() {\r\n\r\n  const user = useContext(UserContext);\r\n    console.log(\"user= \", user);\r\n\r\n  // \r\n  const [loggedInUser, setLoggedinUser] = useOutletContext();\r\n  console.log(\"home liu=\", loggedInUser);\r\n    \r\n  const nav = useNavigate();\r\n\r\n  const logout = () => {\r\n    sessionStorage.removeItem(\"jwt\");\r\n    setLoggedinUser(\"\");\r\n    nav(\"/login\");\r\n    // nav(\"/\");        need to refresh home page -> need to put logout in header\r\n  }\r\n\r\n\r\n  if (loggedInUser === \"\")\r\n  {\r\n    return (\r\n      // <div><p>This is home.</p><header>anything</header></div>\r\n  \r\n      // <section>\r\n        /* <Header props={[loggedInUser, setLoggedinUser]}/> */\r\n      <>\r\n\r\n        \r\n\r\n      <section className=\"mainContent\">\r\n  \r\n        {/*  */}\r\n        {/* <p>\r\n        {/* <button className=\"AO-link\" onClick={logout}>Log Out</button> *}\r\n          <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n          <p className=\"AO-or\">or</p>\r\n          <Link className=\"AO-link\" to={'/login'}>Login</Link>\r\n        </p> */}\r\n        {/* <br/><br/><br/>\r\n         */}\r\n        {/*  */}\r\n  \r\n        <div className=\"intro\">\r\n          <div className=\"introPara\">\r\n            <p>\r\n              Spending too much on your energy bill? Or do you simply want to switch\r\n              to a better more sustainable source of energy?\r\n            </p>\r\n            <p>\r\n              We provide quotes comparing different energies to help you find what's\r\n              best for you.\r\n            </p>\r\n            <p>\r\n              Just enter a few details in the calculator below and we can start you\r\n              off switching energy sources.\r\n            </p>\r\n          </div>\r\n        \r\n\r\n          <div className=\"reg\">\r\n          {/* <button className=\"AO-link\" onClick={logout}>Log Out</button> */}\r\n            <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n            <p className=\"AO-or\">or</p>\r\n            <Link className=\"AO-link\" to={'/login'}>Login</Link>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        <br />\r\n  \r\n        <div className=\"calculator\">\r\n          <h3>Energy Quote Calculator</h3>\r\n          <br />\r\n          <p>calculator stuff here</p>\r\n          <br />\r\n        </div>\r\n        <br />\r\n  \r\n        <div className=\"myQuotes\">\r\n          <h4>Your Quotes:</h4>\r\n          <br />\r\n          <p>You have 1 quote saved.</p>\r\n          <br />\r\n  \r\n          <div className=\"quotesList\">\r\n            <div className=\"quote\">\r\n              <p>1st quote</p>\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n  \r\n        <br />\r\n        <ul className=\"homeList\">\r\n          <li>\r\n            <p>Not sure about making the change to renewable energy just yet?</p>\r\n            <p>\r\n              Find out about each renewable energy{\" \"}\r\n              <a href=\"/renewable_energy\">here</a>.\r\n            </p>\r\n          </li>\r\n          <br />\r\n          <li>\r\n            <p>Want to reduce your energy bills in the meantime?</p>\r\n            <p>\r\n              Look through our energy ssving tips as well as user-posted tips{\" \"}\r\n              <a href=\"/tips\">here</a>.\r\n            </p>\r\n          </li>\r\n          <br />\r\n          <li>\r\n            <p>Want to get involved?</p>\r\n            <p>\r\n              Sign up to petitions promoting for change{\" \"}\r\n              <a href=\"/petitions\">here</a>.\r\n            </p>\r\n          </li>\r\n          <br />\r\n          <li>\r\n            <p>How much do you know about our energy?</p>\r\n            <p>\r\n              Test your knowledge <a href=\"/quiz\">here</a> by taking interacctive\r\n              quizzes.\r\n            </p>\r\n          </li>\r\n          <br />\r\n        </ul>\r\n      </section>\r\n\r\n      {/* <p className=\"reg\">\r\n      {/* <button className=\"AO-link\" onClick={logout}>Log Out</button> *}\r\n        <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n        <p className=\"AO-or\">or</p>\r\n        <Link className=\"AO-link\" to={'/login'}>Login</Link>\r\n      </p> */}\r\n\r\n\r\n      </>\r\n  \r\n      // {/* </section> */}\r\n    );\r\n  }\r\n  else \r\n  {\r\n  return (\r\n    // <div><p>This is home.</p><header>anything</header></div>\r\n\r\n    // <section>\r\n      /* <Header props={[loggedInUser, setLoggedinUser]}/> */\r\n\r\n    <section className=\"mainContent\">\r\n\r\n      {/*  */}\r\n      {/* <p>\r\n      <button className=\"AO-link\" onClick={logout}>Log Out</button>\r\n      </p>\r\n      <br/><br/><br/> */}\r\n      {/*  */}\r\n\r\n      {/* <p>\r\n        Spending too much on your energy bill? Or do you simply want to switch\r\n        to a better more sustainable source of energy?\r\n      </p>\r\n      <p>\r\n        We provide quotes comparing different energies to help you find what's\r\n        best for you.\r\n      </p>\r\n      <p>\r\n        Just enter a few details in the calculator below and we can start you\r\n        off switching energy sources.\r\n      </p> */}\r\n\r\n      <div className=\"intro\">\r\n        <div className=\"introPara\">\r\n          <p>\r\n            Spending too much on your energy bill? Or do you simply want to switch\r\n            to a better more sustainable source of energy?\r\n          </p>\r\n          <p>\r\n            We provide quotes comparing different energies to help you find what's\r\n            best for you.\r\n          </p>\r\n          <p>\r\n            Just enter a few details in the calculator below and we can start you\r\n            off switching energy sources.\r\n          </p>\r\n        </div>\r\n      \r\n        {/* <div className=\"reg\"> */}\r\n          <div className=\"reg\">\r\n          <button className=\"AO-link\" onClick={logout}>Log Out</button>\r\n            {/* <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n            <p className=\"AO-or\">or</p>\r\n            <Link className=\"AO-link\" to={'/login'}>Login</Link> */}\r\n          </div>\r\n        {/* </div> */}\r\n      </div>\r\n\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <div className=\"calculator\">\r\n        <h3>Energy Quote Calculator</h3>\r\n        <br />\r\n        <p>calculator stuff here</p>\r\n        <br />\r\n      </div>\r\n      <br />\r\n\r\n      <div className=\"myQuotes\">\r\n        <h4>Your Quotes:</h4>\r\n        <br />\r\n        <p>You have 1 quote saved.</p>\r\n        <br />\r\n\r\n        <div className=\"quotesList\">\r\n          <div className=\"quote\">\r\n            <p>1st quote</p>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n\r\n      <br />\r\n      <ul className=\"homeList\">\r\n        <li>\r\n          <p>Not sure about making the change to renewable energy just yet?</p>\r\n          <p>\r\n            Find out about each renewable energy{\" \"}\r\n            <a href=\"/renewable_energy\">here</a>.\r\n          </p>\r\n        </li>\r\n        <br />\r\n        <li>\r\n          <p>Want to reduce your energy bills in the meantime?</p>\r\n          <p>\r\n            Look through our energy ssving tips as well as user-posted tips{\" \"}\r\n            <a href=\"/tips\">here</a>.\r\n          </p>\r\n        </li>\r\n        <br />\r\n        <li>\r\n          <p>Want to get involved?</p>\r\n          <p>\r\n            Sign up to petitions promoting for change{\" \"}\r\n            <a href=\"/petitions\">here</a>.\r\n          </p>\r\n        </li>\r\n        <br />\r\n        <li>\r\n          <p>How much do you know about our energy?</p>\r\n          <p>\r\n            Test your knowledge <a href=\"/quiz\">here</a> by taking interacctive\r\n            quizzes.\r\n          </p>\r\n        </li>\r\n        <br />\r\n      </ul>\r\n    </section>\r\n\r\n    // {/* </section> */}\r\n  );\r\n  }\r\n}\r\n","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Registration.js",[],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\AboutUs.js",[],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\RenewableEnergy.js",[],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Petitions.js",[],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Donation.js",["132","133"],[],"import React from \"react\";\r\nimport \"./Donation.css\";\r\n\r\nexport default function Donation() {\r\n  return (\r\n    // <div><p>This is Donation</p></div>\r\n\r\n    <section className=\"mainContent\">\r\n      <div className=\"newProjects\">\r\n        <h3>Upcoming Projects</h3>\r\n        <br />\r\n        <p>\r\n          Here's a few new projects that aim to make renewable energy more\r\n          attainable.\r\n        </p>\r\n        <br />\r\n        <p>\r\n          If you want to help these underfunded projects then you can donate to\r\n          their causes by following the links to their donation pages.\r\n        </p>\r\n        <br />\r\n        <div className=\"project\">\r\n          <h4>The _ Project</h4>\r\n          <br />\r\n          <p>This project...</p>\r\n          <p>\r\n            <a href=\"\">Find out more.</a>\r\n          </p>\r\n        </div>\r\n        <br />\r\n        <br />\r\n\r\n        <div className=\"project\">\r\n          <h4>The _ Project</h4>\r\n          <br />\r\n          <p>This project...</p>\r\n          <p>\r\n            <a href=\"\">Find out more.</a>\r\n          </p>\r\n        </div>\r\n        <br />\r\n        <br />\r\n      </div>\r\n      <br />\r\n    </section>\r\n  );\r\n}\r\n","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Tips.js",["134","135","136","137","138","139","140","141","142","143","144"],[],"// import React from \"react\";\r\n// import \"./Tips.css\";\r\n\r\n// import lightbulb from \"./TipsComponents/lightbulb.jpg\";\r\n// import shower from \"./TipsComponents/shower.jpg\";\r\n// import kettle from \"./TipsComponents/kettle.jpg\";\r\n// import pencil from \"./TipsComponents/pencil.jpg\";\r\n// import bin from \"./TipsComponents/delete bin.jpg\";\r\n\r\n// export default function Tips() {\r\n//   const tabSwitch = () => {\r\n//     const tabs = document.querySelectorAll(\"[data-tab-value]\");\r\n//     const tabInfos = document.querySelectorAll(\"[data-tab-info]\");\r\n\r\n//     tabs.forEach((tab) => {\r\n//       tab.addEventListener(\"click\", () => {\r\n//         const target = document.querySelector(tab.dataset.tabValue);\r\n\r\n//         tabInfos.forEach((tabInfo) => {\r\n//           tabInfo.classList.remove(\"active\");\r\n//         });\r\n//         target.classList.add(\"active\");\r\n//       });\r\n//     });\r\n//   };\r\n\r\n//   // function increment()\r\n//   // {\r\n//   // var value = parseInt(document.getElementById('number').value, 10);\r\n//   // value = isNaN(value) ? 0 : value;\r\n//   // value++;\r\n//   // document.getElementById('number').value = value;\r\n\r\n//   //     const number = document.getElementById('number')\r\n//   //     //counter variables\r\n//   //     let counter1 = 0\r\n//   // function increment(){\r\n//   //         counter1 = counter1 + 1\r\n//   //         number.innerHTML = counter1\r\n//   //         // document.getElementById('number').value = counter1;\r\n//   //   }\r\n//   // }\r\n//   // var counterVal = 0;\r\n\r\n//   // function increment() {\r\n//   //     updateDisplay(++counterVal);\r\n//   // }\r\n\r\n//   // function updateDisplay(val) {\r\n//   //     document.getElementById(\"number\").innerHTML = val;\r\n//   // }\r\n\r\n//   return (\r\n//     // <div><p>This is tips</p></div>\r\n\r\n//     <section className=\"mainContent\">\r\n//       <section>\r\n//         <h3>Energy Saving Tips</h3>\r\n//         <br />\r\n//         <p>\r\n//           We know not everyone can afford to switch to better renewable energy\r\n//           yet, so here's some tips to help you out saving energy and money for\r\n//           energy.\r\n//         </p>\r\n//       </section>\r\n\r\n//       <section>\r\n//         <div className=\"tabs\">\r\n//           {/* need to figure out tab switching + put the css in*/}\r\n//           <span data-tab-value=\"#tab_1\" onClick={tabSwitch}>\r\n//             Tips from Us\r\n//           </span>\r\n//           <span data-tab-value=\"#tab_2\" onClick={tabSwitch}>\r\n//             Tips from All\r\n//           </span>\r\n//           <span data-tab-value=\"#tab_3\" onClick={tabSwitch}>\r\n//             Tips from You\r\n//           </span>\r\n//         </div>\r\n//         <div className=\"tab-content\">\r\n//           {/* tab 1 */}\r\n//           <div className=\"tabs_tab active\" id=\"tab_1\" data-tab-info>\r\n//             {/* <!-- group em together properly now --> */}\r\n\r\n//             <div className=\"tipLine\">\r\n//               <div className=\"tip\">\r\n//                 <div className=\"beforeH\">\r\n//                   <span>\r\n//                     <h4>\r\n//                       Leaving the room?\r\n//                       <br />\r\n//                       <br />\r\n//                       Turn it off\r\n//                     </h4>\r\n//                   </span>\r\n//                   <img src={lightbulb} alt=\"lightbulb\" id=\"lightbulb\" />\r\n//                 </div>\r\n//                 <div className=\"afterH\">\r\n//                   Turning lights off when you leave the room or are simply not\r\n//                   using them could save you £25 per year on energy bills\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"tip\">\r\n//                 <div className=\"beforeH\">\r\n//                   <span>\r\n//                     <strong>\r\n//                       Not using it?\r\n//                       <br />\r\n//                       <br />\r\n//                       Unplug it\r\n//                     </strong>\r\n//                   </span>\r\n//                 </div>\r\n//                 <div className=\"afterH\">\r\n//                   If you're not using your electrical devices, make sure you\r\n//                   unplug them\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"tipLine\">\r\n//               <div className=\"tip\">\r\n//                 <div className=\"beforeH\">\r\n//                   <span>\r\n//                     <strong>\r\n//                       At 100%?\r\n//                       <br />\r\n//                       <br />\r\n//                       Stop charging it\r\n//                     </strong>\r\n//                   </span>\r\n//                 </div>\r\n//                 <div className=\"afterH\">\r\n//                   Make sure you unplug when your devices reach full-charge\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"tip\">\r\n//                 <div className=\"beforeH\">\r\n//                   <span>\r\n//                     <strong>\r\n//                       Use an air dryer\r\n//                       <br />\r\n//                       <br />\r\n//                       Not a tumble dryer\r\n//                     </strong>\r\n//                   </span>\r\n//                 </div>\r\n//                 <div className=\"afterH\">\r\n//                   Don't use the tumble dryer when it's not necessary, hanging\r\n//                   clothes on drying racks could save £70 a year\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"tipLine\">\r\n//               <div className=\"tip\">\r\n//                 <div className=\"beforeH\">\r\n//                   <span>\r\n//                     <strong>\r\n//                       Shower don't Bathe\r\n//                       <br />\r\n//                     </strong>\r\n//                   </span>\r\n//                   <img src={shower} alt=\"shower\" id=\"shower\" />\r\n//                 </div>\r\n//                 <div className=\"afterH\">\r\n//                   Swapping just one bath for a short shower a week could save\r\n//                   £20 a year\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"tip\">\r\n//                 <div className=\"beforeH\">\r\n//                   <span>\r\n//                     <strong>\r\n//                       Use Kettles wisely\r\n//                       <br />\r\n//                       <br />\r\n//                       Avoid overfilling\r\n//                     </strong>\r\n//                   </span>\r\n//                   <img src={kettle} alt=\"kettle\" id=\"kettle\" />\r\n//                 </div>\r\n//                 <div className=\"afterH\">\r\n//                   Using just the right amount of water when boiling your kettle\r\n//                   could save £13 a year\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* tab 2 */}\r\n//           <div className=\"tabs_tab\" id=\"tab_2\" data-tab-info>\r\n//             <p>Browse the helpful tips posted by your fellow users.</p>\r\n//             <br />\r\n//             <div className=\"allTips\">\r\n//               {/* <p>box</p>\r\n//                             <p>gonna have a filter</p>\r\n//                             <p>then display tips underneath</p>\r\n//                             <br/> */}\r\n//               <div id=\"aTsameLine\">\r\n//                 <span>\r\n//                   Category:\r\n//                   <select id=\"tipFilterCategory\">\r\n//                     <option></option>\r\n//                     <option id=\"homeOption\">Home</option>\r\n//                     <option is=\"carOption\">Car</option>\r\n//                   </select>\r\n//                 </span>\r\n//                 <span>\r\n//                   Order:\r\n//                   <select id=\"tipFilterCategory\">\r\n//                     <option id=\"newest\">Newest First</option>\r\n//                     <option id=\"oldest\">Oldest First</option>\r\n//                     <option id=\"mostPop\">Most Popular</option>\r\n//                     <option id=\"leastPop\">Least Popular</option>\r\n//                   </select>\r\n//                 </span>\r\n//                 {/* <!-- proper name -> organise similar elements for css --> */}\r\n//                 <span>\r\n//                   <button id=\"tipFilterButton\">Filter</button>\r\n//                 </span>\r\n//               </div>\r\n//               <div className=\"tipBoxes\">\r\n//                 {/* will get tips from database */}\r\n//                 {/* <div className=\"tipBox\">\r\n//                                     <span className=\"tipString\">\r\n//                                         <p>This is a Tip.</p>\r\n//                                     </span>\r\n//                                     <span className=\"likes\">\r\n//                                         <p>0 Likes</p>\r\n//                                     </span>\r\n//                                 </div>\r\n//                                 <div className=\"tipBox\">\r\n//                                     <span className=\"tipString\">\r\n//                                         <p>This is another Tip.</p>\r\n//                                     </span>\r\n//                                     <span className=\"likes\">\r\n//                                         <p>-1 Likes</p>\r\n//                                     </span>\r\n//                                 </div>\r\n//                                 <div className=\"tipBox\">\r\n//                                     <span className=\"tipString\">\r\n//                                         <p>This is the best Tip!</p>\r\n//                                     </span>\r\n//                                     <span className=\"likes\">\r\n//                                         <p>999 Likes</p>\r\n//                                     </span>\r\n//                                 </div> */}\r\n\r\n//                 <div className=\"tipBox\">\r\n//                   <div className=\"firstLine\">\r\n//                     <span className=\"tipCategory\">\r\n//                       <p>Home</p>\r\n//                     </span>\r\n//                     <span className=\"postInfo\">\r\n//                       <span className=\"tipAuthor\">posted by: smithy</span>\r\n//                       <span className=\"tipDateTime\">- 05/01/2023 15:25</span>\r\n//                     </span>\r\n//                   </div>\r\n//                   <div className=\"secondLine\">\r\n//                     <span className=\"tipString\">\r\n//                       <p>\r\n//                         Remember to keep all windows and doors close to stop\r\n//                         heat escaping.\r\n//                       </p>\r\n//                     </span>\r\n//                     <span className=\"likes\">\r\n//                       <span className=\"tipLikes\">\r\n//                         {/* <div id=\"number\" value=\"0\">0</div> */}\r\n//                         <p>1 Likes</p>\r\n//                       </span>\r\n//                       <span className=\"likeTip\">\r\n//                         <button\r\n//                           id=\"likeTipButton\"\r\n//                           // onClick={\r\n//                           //     document.getElementById(\"number\").innerHTML++\r\n//                           // }\r\n//                         >\r\n//                           Like\r\n//                         </button>\r\n//                       </span>\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"tipBox\">\r\n//                   <div className=\"firstLine\">\r\n//                     <span className=\"tipCategory\">\r\n//                       <p>Car</p>\r\n//                     </span>\r\n//                     <span className=\"postInfo\">\r\n//                       <span className=\"tipAuthor\">posted by: jane doe</span>\r\n//                       <span className=\"tipDateTime\">- 05/01/2023 15:25</span>\r\n//                     </span>\r\n//                   </div>\r\n//                   <div className=\"secondLine\">\r\n//                     <span className=\"tipString\">\r\n//                       <p>\r\n//                         Never leave the engine running. Even if it is for only a\r\n//                         couple minutes, it's better to turn it off.\r\n//                       </p>\r\n//                     </span>\r\n//                     <span className=\"likes\">\r\n//                       <span className=\"tipLikes\">\r\n//                         <p>44 Likes</p>\r\n//                       </span>\r\n//                       <span className=\"likeTip\">\r\n//                         <button id=\"likeTipButton\">Like</button>\r\n//                       </span>\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* tab 3 */}\r\n//           <div className=\"tabs_tab\" id=\"tab_3\" data-tab-info>\r\n//             <span>You currently have </span>\r\n//             <span>2</span>\r\n//             <span> tips posted.</span>\r\n\r\n//             {/* submit tips */}\r\n//             <div className=\"submitTips\">\r\n//               <div>\r\n//                 <p>Do you have helpful tips for others?</p>\r\n//                 <span>Category: </span>\r\n//                 <select id=\"tipCategory\">\r\n//                   <option></option>\r\n//                   <option id=\"homeOption\">Home</option>\r\n//                   <option is=\"carOption\">Car</option>\r\n//                 </select>\r\n//               </div>\r\n//               <div id=\"textArea\">\r\n//                 <textarea\r\n//                   id=\"tA\"\r\n//                   placeholder=\"Enter your Tip here...\"\r\n//                 ></textarea>\r\n//               </div>\r\n//               <div id=\"tipButtonDiv\">\r\n//                 <button id=\"tipButton\">Submit</button>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"userTips\">\r\n//               <br />\r\n//               <p>\r\n//                 <strong>Your Tips:</strong>\r\n//               </p>\r\n//               {/* <br/> */}\r\n\r\n//               {/* <div className=\"userTipBoxes\">\r\n//                                 <div className=\"userTipBox\">\r\n//                                     <span className=\"userTipInfo\">\r\n//                                         <div className=\"firstLine\">\r\n//                                             <span className=\"tipCategory\"><p>Car</p></span>\r\n//                                             <span className=\"postInfo\">\r\n//                                                 <span className=\"tipDateTime\"> posted - 05/01/2023 15:25</span>\r\n//                                             </span>\r\n//                                         </div>\r\n//                                         <div className=\"secondLine\">\r\n//                                             <span className=\"userTipString\">\r\n//                                                 <p>Never leave the engine running. Even if it is for only a couple minutes, it's better to turn it off.</p>\r\n//                                             </span>\r\n//                                             <span className=\"userLikes\">\r\n//                                                 <span className=\"userTipLikes\">\r\n//                                                     <p>44 Likes</p>\r\n//                                                 </span>    \r\n//                                             </span>\r\n//                                         </div>\r\n//                                     </span>\r\n//                                     <span className=\"modifyTip\">\r\n//                                         <img src={pencil} alt=\"editingButton\" id=\"edit\" width=\"25px\" height=\"35px\"/>\r\n//                                         <img src={bin} alt=\"deletingButton\" id=\"delete\" width=\"25px\" height=\"35px\"/>\r\n//                                     </span>\r\n\r\n//                                     {/* need editing, deleting stuff \r\n//                                 </div>\r\n//                             </div> */}\r\n\r\n//               <div className=\"submitTipsN\">\r\n//                 {/* <div className=\"userTipBoxN\"> */}\r\n//                 <div>\r\n//                   {/* <p>Do you have helpful tips for others?</p> */}\r\n//                   {/* <span>Category: </span> */}\r\n//                   {/* <select id=\"tipCategoryN\">\r\n//                                             <option></option>\r\n//                                             <option id=\"homeOption\">Home</option>\r\n//                                             <option is=\"carOption\">Car</option>\r\n//                                         </select> */}\r\n//                   {/* <span className=\"userTipInfo\">\r\n//                                             <div className=\"firstLine\">\r\n//                                                 <span className=\"tipCategory\"><p>Car</p></span>\r\n//                                                 <span className=\"postInfo\">\r\n//                                                     <span className=\"tipDateTime\"> posted - 05/01/2023 15:25</span>\r\n//                                                 </span>\r\n//                                             </div>\r\n//                                             <div className=\"secondLine\">\r\n//                                                 <span className=\"userTipString\">\r\n//                                                     <p>Never leave the engine running. Even if it is for only a couple minutes, it's better to turn it off.</p>\r\n//                                                 </span>\r\n//                                                 <span className=\"userLikes\">\r\n//                                                     <span className=\"userTipLikes\">\r\n//                                                         <p>44 Likes</p>\r\n//                                                     </span>    \r\n//                                                 </span>\r\n//                                             </div>\r\n//                                         </span>\r\n//                                         <span className=\"modifyTip\">\r\n//                                             <img src={pencil} alt=\"editingButton\" id=\"edit\" width=\"25px\" height=\"35px\"/>\r\n//                                             <img src={bin} alt=\"deletingButton\" id=\"delete\" width=\"25px\" height=\"35px\"/>\r\n//                                         </span> */}\r\n\r\n//                   {/* <span className=\"info\">\r\n//                                             {/* <p>testing</p> \r\n//                                             <div className=\"fLine\">\r\n//                                                 {/* <p>t2</p> \r\n//                                                 <span className=\"tCategory\">Car</span>\r\n//                                                 <span className=\"tDateTime\">posted - 05/01/2023 15:25</span>\r\n//                                             </div>\r\n//                                              <span><p>t3</p></span> */}\r\n//                   {/* <div className=\"sLine\">\r\n//                                                 <span className=\"tString\">\r\n//                                                     <p>tip</p>\r\n//                                                 </span>\r\n//                                                 <span className=\"tLikes\">\r\n//                                                     <p>4 Likes</p>\r\n//                                                 </span>\r\n//                                             </div> \r\n//                                         </span>\r\n//                                         <span className=\"modify\">\r\n//                                             <img src={pencil} alt=\"editingButton\" id=\"edit\" width=\"25px\" height=\"35px\"/>\r\n//                                             <img src={bin} alt=\"deletingButton\" id=\"delete\" width=\"25px\" height=\"35px\"/>\r\n//                                         </span> */}\r\n\r\n//                   <div className=\"userTipBoxN\">\r\n//                     <span className=\"userTipInfoN\">\r\n//                       <div className=\"firstLine\">\r\n//                         <span className=\"tipCategory\">\r\n//                           <p>Car</p>\r\n//                         </span>\r\n//                         <span className=\"postInfo\">\r\n//                           <span className=\"tipDateTime\">\r\n//                             {\" \"}\r\n//                             posted - 05/01/2023 15:25\r\n//                           </span>\r\n//                         </span>\r\n//                       </div>\r\n//                       <div className=\"secondLine\">\r\n//                         <span className=\"userTipString\">\r\n//                           <p>\r\n//                             Never leave the engine running. Even if it is for\r\n//                             only a couple minutes, it's better to turn it off.\r\n//                           </p>\r\n//                         </span>\r\n//                         <span className=\"userLikes\">\r\n//                           <span className=\"userTipLikes\">\r\n//                             <p>44 Likes</p>\r\n//                           </span>\r\n//                         </span>\r\n//                       </div>\r\n//                     </span>\r\n//                     <span className=\"modifyTip\">\r\n//                       <img\r\n//                         src={pencil}\r\n//                         alt=\"editingButton\"\r\n//                         id=\"edit\"\r\n//                         width=\"25px\"\r\n//                         height=\"35px\"\r\n//                       />\r\n//                       <img\r\n//                         src={bin}\r\n//                         alt=\"deletingButton\"\r\n//                         id=\"delete\"\r\n//                         width=\"25px\"\r\n//                         height=\"35px\"\r\n//                       />\r\n//                     </span>\r\n\r\n//                     {/* need editing, deleting stuff */}\r\n//                     {/* </div> */}\r\n//                   </div>\r\n//                   {/* <div className=\"info\"></div>\r\n//                                     <div id=\"textAreaN\">\r\n//                                         <textarea id=\"tAN\" placeholder=\"Enter your Tip here...\" ></textarea>\r\n//                                     </div>\r\n//                                     <div id=\"tipButtonDivN\">\r\n//                                         <button id=\"tipButtonN\">Submit</button>\r\n//                                     </div> */}\r\n//                 </div>\r\n\r\n//                 {/* must fix css */}\r\n//                 <div>\r\n//                   <div className=\"userTipBoxN\">\r\n//                     <span className=\"userTipInfoN\">\r\n//                       <div className=\"firstLine\">\r\n//                         <span className=\"tipCategory\">\r\n//                           <p>Home</p>\r\n//                         </span>\r\n//                         <span className=\"postInfo\">\r\n//                           <span className=\"tipDateTime\">\r\n//                             {\" \"}\r\n//                             posted - 06/01/2023 15:28\r\n//                           </span>\r\n//                         </span>\r\n//                       </div>\r\n//                       <div className=\"secondLine\">\r\n//                         <span className=\"userTipString\">\r\n//                           <p>\r\n//                             Only turn the heating on when it's necessary, layer\r\n//                             up clothing instead.\r\n//                           </p>\r\n//                         </span>\r\n//                         <span className=\"userLikes\">\r\n//                           <span className=\"userTipLikes\">\r\n//                             <p>207 Likes</p>\r\n//                           </span>\r\n//                         </span>\r\n//                       </div>\r\n//                     </span>\r\n//                     <span className=\"modifyTip\">\r\n//                       <img\r\n//                         src={pencil}\r\n//                         alt=\"editingButton\"\r\n//                         id=\"edit\"\r\n//                         width=\"25px\"\r\n//                         height=\"35px\"\r\n//                       />\r\n//                       <img\r\n//                         src={bin}\r\n//                         alt=\"deletingButton\"\r\n//                         id=\"delete\"\r\n//                         width=\"25px\"\r\n//                         height=\"35px\"\r\n//                       />\r\n//                     </span>\r\n\r\n//                     {/* need editing, deleting stuff */}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* <script type=\"text/javascript\">\r\n//                     const tabs = document.querySelectorAll('[data-tab-value]')\r\n//                     const tabInfos = document.querySelectorAll('[data-tab-info]')\r\n\r\n//                     tabs.forEach( tab => {\r\n//                         tab.addEventListener('click', () => {\r\n//                             const target = document.querySelector(tab.dataset.tabValue);\r\n\r\n//                             tabInfos.forEach(tabInfo => {\r\n//                                 tabInfo.classList.remove('active')\r\n//                             })\r\n//                             target.classList.add('active');\r\n//                         })\r\n//                     })\r\n//                 </script> */}\r\n//       </section>\r\n//     </section>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nimport './Tips.css';\r\n\r\nimport lightbulb from \"./TipsComponents/lightbulb.jpg\";\r\nimport shower from \"./TipsComponents/shower.jpg\";\r\nimport kettle from \"./TipsComponents/kettle.jpg\";\r\nimport pencil from \"./TipsComponents/pencil.jpg\";\r\nimport bin from \"./TipsComponents/delete bin.jpg\";\r\n\r\n// import { UserTip } from './UserTip';\r\nimport AllTip from './TipsComponents/AllTip';\r\nimport Likes from './TipsComponents/Likes';\r\n\r\nimport badLang from './TipsComponents/badLang.json';\r\n\r\nexport default function Tips(){\r\n\r\n    const [loggedInUser, setLoggedinUser] = useOutletContext();\r\n    const [userdata, setUserdata] = useState(\"\");\r\n\r\n    // useEffect(()=>{\r\n    //     if(loggedInUser!==\"\" && userdata===\"\"){\r\n\r\n    //         // console.log(loggedInUser);      loggedInUser is just email not user\r\n\r\n    //         const jwt = sessionStorage.getItem('jwt');\r\n    //         console.log(jwt);\r\n    //         axios({\r\n    //             method: 'get',\r\n    //             url: 'http://localhost:8080/user/findByEmail',\r\n    //             // params: {email: loggedInUser.email},\r\n    //             params: {email: loggedInUser},\r\n    //             headers: {\"Authorization\" : `Bearer ${jwt}`}\r\n    //         }).then((response) => {\r\n    //             if (response.status === 200){\r\n    //                 console.log(response.data);\r\n    //                 console.log('response.data = ', response.data);\r\n    //                 console.log(response.data.userType);\r\n    //                 setUserdata(response.data);\r\n    //                 console.log('userdata = ', userdata);\r\n    //             }\r\n    //         }).catch(err => {\r\n    //             console.log(err.response);\r\n    //             setUserdata(\"Data failure\");\r\n    //         })\r\n\r\n    //         ///////////////\r\n    //         console.log('userdata = ', userdata);\r\n\r\n    //         // const jwt = sessionStorage.getItem('jwt');\r\n    //         console.log(jwt);\r\n\r\n\r\n    //         // axios({\r\n    //         //     method: 'get',\r\n    //         //     url: 'http://localhost:8080/tip/findByAuthor',\r\n    //         //     // params: {authorId: loggedInUser.id},\r\n    //         //     // params: {\r\n    //         //     //     author: { id: userdata}\r\n    //         //     // },\r\n    //         //     params: {author: userdata},\r\n    //         //     headers: {\"Authorization\" : `Bearer ${jwt}`}\r\n    //         // }).then((response) => {\r\n    //         //     if (response.status === 200){\r\n    //         //         console.log(response.data);\r\n    //         //         console.log(response.data.tipString);\r\n    //         //         setTipdata(response.data);\r\n    //         //     }\r\n    //         // }).catch(err => {\r\n    //         //     console.log(err.response);\r\n    //         //     setTipdata(\"Tip Data failure\");\r\n    //         // })\r\n    //     }\r\n    // },[userdata, loggedInUser]);\r\n\r\n\r\n    const checkLoggedIn = () => {\r\n        if(loggedInUser!==\"\" && userdata===\"\"){\r\n\r\n            // console.log(loggedInUser);      loggedInUser is just email not user\r\n            console.log(\"liu in T=\", loggedInUser);\r\n\r\n            const jwt = sessionStorage.getItem('jwt');\r\n            console.log(jwt);\r\n            axios({\r\n                method: 'get',\r\n                url: 'http://localhost:8080/user/findByEmail',\r\n                // params: {email: loggedInUser.email},\r\n                params: {email: loggedInUser},\r\n                headers: {\"Authorization\" : `Bearer ${jwt}`}\r\n            }).then((response) => {\r\n                if (response.status === 200){\r\n                    console.log(response.data);\r\n                    console.log('response.data = ', response.data);\r\n                    console.log(response.data.userType);\r\n                    setUserdata(response.data);\r\n                    console.log('userdata in then = ', userdata);\r\n                    // getAllData();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.response);\r\n                setUserdata(\"Data failure\");\r\n            })\r\n\r\n            ///////////////\r\n            console.log('userdata in check logged in = ', userdata);\r\n\r\n            // const jwt = sessionStorage.getItem('jwt');\r\n            console.log(jwt);\r\n        }\r\n    }\r\n\r\n\r\n    const tipCategory = useRef();\r\n    const tipString = useRef();\r\n    const author = useRef();\r\n    // remove author op\r\n\r\n    const bannedWords = [\"ban\", \"word\"];\r\n    // const badWords = JSON.parse(badLang);\r\n    const badWords = require('./TipsComponents/badLang.json').words;\r\n\r\n    const checkWords = (string) => {\r\n        console.log(\"in checkWords \", string);\r\n        // const checker = value => !bannedWords.some(e => value.includes(e));\r\n        const checker = value => !badWords.some(e => value.includes(e));\r\n\r\n\r\n        console.log(\"checker \", checker);\r\n        // console.log(\"value \", value);\r\n\r\n        const arr  = string.split(\" \");\r\n\r\n        console.log(\"af \", arr.filter(checker), \"l= \", arr.filter(checker).length);\r\n        console.log(\"a \", arr, \"l= \", arr.length);\r\n\r\n        // if (checker === true)\r\n        //     return true;\r\n        // else\r\n        //     return false;\r\n\r\n        var containsBad = false;\r\n        // if (arr.filter(checker).every((val, index) => val !== arr[index]))\r\n        // if (arr.filter(checker) != arr)\r\n        if (arr.filter(checker).length !== arr.length)\r\n            containsBad = true;\r\n\r\n        console.log(\"containsBad \", containsBad);\r\n        // return checker;\r\n        return containsBad;\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let formValid = false;\r\n\r\n        if (tipCategory.current.validity.valueMissing \r\n            || tipString.current.validity.valueMissing \r\n            // || author.current.validity.valueMissing)\r\n            )\r\n        {\r\n            alert(\"Please fill in all text fields.\");\r\n        }\r\n        else if (checkWords(tipString.current.value))\r\n        {\r\n            alert(\"This tip contains banned language. \\nPlease enter again.\");\r\n        }\r\n        else\r\n        {\r\n            formValid = true;\r\n        }\r\n        return formValid;\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(validateForm()){\r\n\r\n            const jwt = sessionStorage.getItem('jwt');\r\n            console.log(jwt);\r\n\r\n            // axios.post('https://reqres.in/api/users',{\r\n            // axios.post('http://localhost:8080/tip',{\r\n            axios({\r\n                method: 'post',\r\n                url: 'http://localhost:8080/tip',\r\n                data: {\r\n                    tipCategory: tipCategory.current.value,\r\n                    tipString: tipString.current.value,\r\n                    // author: userdata,\r\n                    author: {\r\n                        id: userdata.id,\r\n                        name: userdata.name,\r\n                        email: userdata.email,\r\n                        password: userdata.password,\r\n                        buyer_seller: userdata.buyer_seller,\r\n                    }\r\n                },\r\n                headers: { \"Authorization\" : `Bearer ${jwt}`}\r\n            }).then(response=>{\r\n                console.log(response);\r\n                if (response.status === 201){\r\n                    alert(\"Tip created.\")\r\n\r\n                    ////////\r\n                    getAllData();\r\n                }\r\n            }).then(()=>{\r\n                tipCategory.current.value=\"\";\r\n                tipString.current.value=\"\";\r\n                // author.current.value=0;\r\n            })\r\n            .catch(error=>{\r\n                console.log(error);\r\n            })\r\n        }\r\n    }\r\n\r\n    ///////////////\r\n    const [allTipData, setAllTipData] = useState(\"\");\r\n\r\n    const getAllTipData = () => {\r\n        const jwt = sessionStorage.getItem('jwt');\r\n        console.log('userdata.id = ', userdata.id);\r\n        console.log('userdata = ', userdata);\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/tip',\r\n            headers: {\"Authorization\" : `Bearer ${jwt}`}})\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                console.log(\"rd = \", response.data);\r\n                setAllTipData(response.data);\r\n\r\n                ////////////// date\r\n                console.log(\"date = \", response.date);\r\n                // backend - get createAt and updatedAt dates\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    function custom_sort(a, b) {\r\n        console.log(\"in cust_sort funct a=\", a.updatedAt, \", b=\", b, \".\");\r\n        console.log(\"in cust_sort funct \", allTipData, \".\");\r\n        console.log(\"in cust_sort funct i=\", allTipData.index, \".\");\r\n        console.log(\"a test=\", new Date(a.updatedAt));\r\n        return new Date(b.updatedAt)/*.getTime()*/ - new Date(a.updatedAt)/*.getTime()*/;\r\n    }\r\n\r\n    const [likeno, setLikeno] = useState(\"\");\r\n    const [likearr, setLikearr] = useState([]);\r\n\r\n    function mp_sort(a, b)\r\n    {\r\n        console.log(\"in most popular sort\");\r\n        console.log(\"a= \", a, \"gla= \", getLikes(a), \"ln= \", likeno);\r\n        console.log(\"b= \", b, \"glb= \", getLikes(b), \"ln= \", likeno);\r\n        // return (getLikes(a) - getLikes(b));\r\n        console.log(\"a= \", a.id, \" likes= \", <Likes props={a} />);\r\n        console.log(\"b= \", b.id, \" likes= \", <Likes props={b} />);\r\n\r\n        var fl = String(<Likes props={a}/>);\r\n        var sl = String(<Likes props={b} />);\r\n\r\n        // var f = Likes(a);\r\n        // console.log(\"f= \", f);\r\n\r\n        console.log(\"fl= \", fl, \"sl= \", sl);\r\n\r\n        // return(<Likes props={a} /> - <Likes props={b}/>);\r\n        return (fl - sl);\r\n    }\r\n\r\n    const displayAllTipData = () => {\r\n\r\n        if (catSort.current.value === \"Home\" && allTipData !== \"\")\r\n        {\r\n            // allTipData.filter(function (el) {\r\n            //     console.log(\"el tc= \", el.tipCategory);\r\n            //     return el.tipCategory === \"Home\";\r\n            //   });\r\n            const fil = allTipData.filter((e) => e.tipCategory === 'Home');\r\n            // allTipData = allTipData.filter((e) => e.tipCategory === 'Home')\r\n            // console.log(\"fil= \", fil);\r\n            console.log(\"inner os= \", orderSort.current.value, \" cs= \", catSort.current.value, \" atd= \", allTipData);\r\n\r\n            //\r\n            // if (orderSort.current.value === \"Newest First\")\r\n            // {\r\n            //         // allTipData.updatedAt.sort(function(a, b){return a - b});\r\n            //     console.log(\"in catsort ordersort check nf \", fil.updatedAt, \".\");\r\n            //         fil.sort(custom_sort);\r\n\r\n            //         // var t1 = allTipData.substring(0,23);\r\n            //         // var t2 = allTipData.substring(26);\r\n            //         // var t3 = t1 + t2;\r\n            //         // print(t3);\r\n            //         // var  ms = Date.parse(t3);\r\n            //         // print(ms);\r\n\r\n            //         console.log(\"os= \", orderSort.current.value, \" fil= \", fil);\r\n            // }\r\n            // else // will be original which is Oldest First\r\n            // {\r\n            //     console.log(\"in catsort ordersort check else \", oSort);\r\n            // }\r\n\r\n            console.log(\"atd.tc= \", allTipData.tipCategory);\r\n            console.log(\"atd= \", allTipData);\r\n            // console.log(allTipData.forEach((e) => e.tipCategory === \"Home\"));\r\n            for (let i = 0; i < allTipData.length; i++)\r\n                {console.log(\"for atd= \", allTipData.indexOf(i));}\r\n            allTipData.map((allTipData, index) => {\r\n                console.log(\"in if atd.map\");\r\n            // })\r\n            if (allTipData.tipCategory !== \"Home\")\r\n            {\r\n                console.log(\"in if atd.tc != home\");\r\n                return (<></>);\r\n            }\r\n        })\r\n        }\r\n        console.log(\"os= \", orderSort.current.value, \" cs= \", catSort.current.value, \" atd= \", allTipData);\r\n\r\n\r\n        if (orderSort.current.value === \"Newest First\" && allTipData !== \"\")// && catSort === \"\")\r\n        {\r\n                // allTipData.updatedAt.sort(function(a, b){return a - b});\r\n            console.log(\"in ordersort check nf \", allTipData.updatedAt, \".\");\r\n                allTipData.sort(custom_sort);\r\n\r\n                // var t1 = allTipData.substring(0,23);\r\n                // var t2 = allTipData.substring(26);\r\n                // var t3 = t1 + t2;\r\n                // print(t3);\r\n                // var  ms = Date.parse(t3);\r\n                // print(ms);\r\n\r\n                console.log(\"os= \", orderSort.current.value, \" atd= \", allTipData);\r\n        }\r\n        else if (orderSort.current.value === \"Most Popular\" && allTipData !== \"\")\r\n        {\r\n            console.log(\"in most popular\");\r\n            allTipData.sort(mp_sort);\r\n\r\n            allTipData.map((allTipData, index) => {\r\n                getLikes(allTipData)\r\n            })\r\n        }\r\n        else // will be original which is Oldest First\r\n        {\r\n            console.log(\"in ordersort check else \", oSort);\r\n        }\r\n\r\n        return allTipData ? (\r\n        allTipData.map((allTipData, index) => {\r\n\r\n            // if (orderSort.current.value === \"Newest First\")\r\n            // {\r\n            //     // allTipData.updatedAt.sort(function(a, b){return a - b});\r\n\r\n            //     allTipData.sort(custom_sort);\r\n            // }\r\n\r\n            // if (catSort.current.value === \"Home\" && allTipData !== \"\")\r\n            // {\r\n            //     // console.log(\"testing\");\r\n            //     // const fil = allTipData.filter((e) => e.tipCategory === 'Home');\r\n            //     // allTipData = allTipData.filter((e) => e.tipCategory === 'Home')\r\n            //     // console.log(\"fil= \", fil);\r\n            //     console.log(\"inner if os= \", orderSort.current.value, \" cs= \", catSort.current.value, \" atd= \", allTipData);\r\n\r\n            //     if (allTipData.tipCategory !== \"Home\")\r\n            //     {\r\n            //         return (<></>);\r\n            //     }\r\n            // }\r\n            // if (catSort.current.value === \"Car\" && allTipData !== \"\")\r\n            // {\r\n            //     // console.log(\"testing\");\r\n            //     // const fil = allTipData.filter((e) => e.tipCategory === 'Home');\r\n            //     // allTipData = allTipData.filter((e) => e.tipCategory === 'Home')\r\n            //     // console.log(\"fil= \", fil);\r\n            //     console.log(\"inner if os= \", orderSort.current.value, \" cs= \", catSort.current.value, \" atd= \", allTipData);\r\n\r\n            //     if (allTipData.tipCategory !== \"Car\")\r\n            //     {\r\n            //         return (<></>);\r\n            //     }\r\n            // }\r\n            // if (catSort.current.value === \"Transport\" && allTipData !== \"\")\r\n            // {\r\n            //     if (allTipData.tipCategory !== \"Transport\")\r\n            //     {\r\n            //         return (<></>);\r\n            //     }\r\n            // }\r\n\r\n            // all cat in 1 if\r\n            if(catSort.current.value !== \"\" && allTipData !== \"\")\r\n            {\r\n                if (allTipData.tipCategory !== catSort.current.value)\r\n                {\r\n                    return (<></>);\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className=/*\"userTipBoxN\"*/\"tipBox\">\r\n                    <span className=/*\"userTipInfoN\"*/\"box\" key={allTipData.id}>\r\n                        <div className=\"firstLine\">\r\n                            <span className=\"tipCategory\">\r\n                            <p>{allTipData.tipCategory}</p>\r\n                            </span>\r\n\r\n                            {/* <span>{allTipData.indexOf(current)}</span> */}\r\n                            <span>={index}=</span>\r\n\r\n                            <span className=\"postInfo\">\r\n                                <span className=\"tipAuthor\">posted by: {/*smithy*/}{allTipData.author.name}</span>\r\n                                <span className=\"tipDateTime\">\r\n                                    {/*{\" \"}{/*posted*/} - {/*06/01/2023 15:28*/}{/*--/--/---- --:--*/}{new Date(allTipData.updatedAt).toLocaleDateString('en-gb', { /*weekday:\"short\",*/ year:\"numeric\", month:\"numeric\", day:\"numeric\", hour:\"2-digit\", minute:\"2-digit\"}) }\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"secondLine\">\r\n                            {/* <span className=\"userTipString\"> */}\r\n                            <textarea className=\"userTipStringAll\" /*\"ta*/readOnly>{allTipData.tipString}</textarea>\r\n                            {/* </span> */}\r\n                            {/* <span className=\"userLikes\">\r\n                                <span className=\"userTipLikes\">\r\n                                    <p>{/*207*}- Likes</p>\r\n                                </span>\r\n                                <span className=\"likeTip\">\r\n                                    <button id=\"likeTipButton\">Like</button>\r\n                                </span>\r\n                            </span> */}\r\n                            <span className=\"likes\">\r\n                                {/* <span className=\"tipLikes\">\r\n                                    {/* <p>-{() =>getLikes(allTipData.id)}-{tipLikes} Likes</p> */}\r\n                                    {/* <p>{getLikes(allTipData.id)}= Likes</p> */}\r\n                                    {/* <p>Likes</p> */}\r\n                                    {/* {() => getLikes(allTipData.id)} */}\r\n                                    {/* <p>{result[index]}-testing</p> *}\r\n                                    {console.log(\"rindex=\", result[index])}\r\n                                </span> */}\r\n                                <br/>\r\n                                <span className=\"likeTip\">\r\n                                    {/* <button id=\"likeTipButton\" onClick={() => like(allTipData, index)}>Like</button>\r\n                                </span>\r\n                                <span> */}\r\n                                    {/* <p>//{loggedInUser}//</p> */}\r\n                                    <AllTip loggedInUser={loggedInUser} allTipData={allTipData} order={order}/>\r\n                                </span>\r\n                            </span>\r\n                            {/* <div className=\"modifyTip\">  */}\r\n                            {/* </div> */}\r\n                        </div>\r\n                    </span>\r\n                \r\n                    {/* <br /><p> </p> */}\r\n\r\n                </div>\r\n\r\n                // <UserTip key={data.id} data={data} />\r\n\r\n                // now need to format what looks like\r\n\r\n            );\r\n        })\r\n        ) : (\r\n            // <div>\r\n            //     <h3>Want to post helpful tips for others? Create an account to submit your tips.</h3>\r\n            //     <h3>If you already have an account Login to see your tips.</h3>\r\n            // </div>\r\n\r\n            <div>\r\n              <br/>\r\n              <h3>No data yet</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    ///////////////\r\n\r\n    const [data, setData] = useState(\"\");\r\n    const [dataCat, setDataCat] = useState(\"\");\r\n    const [dataStr, setDataStr] = useState(\"\");\r\n    const getAllData = () => {\r\n        const jwt = sessionStorage.getItem('jwt');\r\n\r\n        console.log('userdata.id = ', userdata.id);\r\n        console.log('userdata = ', userdata);\r\n\r\n        // axios\r\n        //     .get(\"tip/findByAuthor\", {\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/tip/findByAuthor',\r\n            params: {authorID: userdata.id},\r\n            // params: {authorID: userdata},\r\n            // params: {\r\n            //     id: userdata.id,\r\n            //     name: userdata.name,\r\n            //     password: userdata.password,\r\n            //     userType: userdata.userType\r\n            // },\r\n            headers: {\"Authorization\" : `Bearer ${jwt}`}})\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                console.log(\"rd = \", response.data);\r\n                setData(response.data);\r\n                setDataCat(response.data.tipCategory);\r\n                setDataStr(response.data.tipString);\r\n\r\n                //////////\r\n                // const posts = [];\r\n                // for (let key in response.data) {\r\n                //     posts.push({...response.data[key], id: key});\r\n                // }\r\n\r\n                // this.useState({\r\n                //     posts: posts,\r\n                // });\r\n\r\n\r\n                ////////////// date\r\n                console.log(\"date = \", response.date);\r\n                // backend - get createAt and updatedAt dates\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        };\r\n\r\n        const orderSort = useRef(\"Newest First\");// had to put before useeffect\r\n        const [oSort, setOSort] = useState(\"Newest First\");\r\n\r\n        const catSort = useRef(\"\");\r\n        const [cSort, setCSort] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        checkLoggedIn();\r\n        getAllData();\r\n        console.log('uE userdata = ', userdata);\r\n\r\n        ///////\r\n        getAllTipData();\r\n\r\n    }, [userdata, orderSort, oSort, cSort]);//, checkLoggedIn, getAllData]);\r\n\r\n    const displayData = () => {\r\n      // do something bout id user doesn't have any tips\r\n        return data ? (\r\n        data.map((data) => {\r\n\r\n            console.log(\"d = \", data);\r\n            getLikes(data);//\r\n            return (\r\n                // <div className=\"data\" key={data.id}>\r\n                //     <div className=\"tipFL\">\r\n                //         <h3>{data.tipCategory}</h3>\r\n                //         <p>date</p>\r\n                //     </div>\r\n                //     <div className=\"tipSL\">\r\n                //         <textarea className=\"ta\" readOnly>{data.tipString}</textarea>\r\n                    \r\n                //  {/* // <p>{data.author}</p> */}\r\n\r\n                //         <div className=\"manageBox\"> \r\n                //         {/* button don't go to just 1 tip but all tips -> fix =>fixed*/}\r\n                //             <button className=\"editBtn\" onClick={() => editTip(data.id)}>Edit</button>              \r\n                //             <button className=\"deleteBtn\" onClick={() => deleteTip(data.id)}>Delete</button>\r\n                //             {/* fix ACAO error */}\r\n                //         </div>\r\n                //     </div>\r\n                \r\n                // </div>\r\n\r\n                <div className=\"userTipBoxN\">\r\n                    <span className=\"userTipInfoN\" key={data.id}>\r\n                        <div className=\"firstLine\">\r\n                            {/* <h3>{data.tipCategory}</h3>\r\n                            <p>date</p> */}\r\n                            <span className=\"tipCategory\">\r\n                            <p>{data.tipCategory}</p>\r\n                            </span>\r\n                            <span className=\"postInfo\">\r\n                                <span className=\"tipDateTime\">\r\n                                    {\" \"}posted - {new Date(data.createdAt).toLocaleDateString('en-gb', { /*weekday:\"short\",*/ year:\"numeric\", month:\"numeric\", day:\"numeric\", hour:\"2-digit\", minute:\"2-digit\"}) }\r\n                                    {\" \"}updated - {new Date(data.updatedAt).toLocaleDateString('en-gb', { /*weekday:\"short\",*/ year:\"numeric\", month:\"numeric\", day:\"numeric\", hour:\"2-digit\", minute:\"2-digit\"}) }\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"secondLine\">\r\n                            {/* <span className=\"userTipString\"> */}\r\n                            <textarea className=\"userTipString\" /*\"ta*/readOnly>{data.tipString}</textarea>\r\n                            {/* </span> */}\r\n                            <span className=\"userLikes\">\r\n                                <span className=\"userTipLikes\">\r\n                                <Likes tip={data}/><p>Likes</p>\r\n                                    {/* <p>{/*207*}{/*tipLikes*}- Likes</p> */}\r\n                                </span>\r\n                            </span>\r\n                            <div className=\"modifyTip\"> \r\n                            {/* button don't go to just 1 tip but all tips -> fix =>fixed*/}\r\n                                <button className=\"editBtn\" onClick={() => editTip(data.id)}>{/*Edit*/}\r\n                                {/* <span className=\"tooltiptext\">Edit</span> */}\r\n                                <img\r\n                            src={pencil}\r\n                            alt=\"editingButton\"\r\n                            id=\"edit\"\r\n                            width=\"25px\"\r\n                            height=\"35px\"\r\n                        />\r\n                        <span className=\"tooltiptext\">Edit</span>\r\n\r\n                        </button>              \r\n                                <button className=/*\"deleteBtn\"*/\"editBtn\" onClick={() => deleteTip(data.id)}>{/*Delete*/}\r\n                                {/* <span className=\"tooltiptext\">Delete</span> */}\r\n                                <img\r\n                            src={bin}\r\n                            alt=\"deletingButton\"\r\n                            id=\"delete\"\r\n                            width=\"25px\"\r\n                            height=\"35px\"\r\n                        />\r\n                        <span className=\"tooltiptext\">Delete</span>\r\n                        </button>\r\n                                {/* fix ACAO error */}\r\n                            </div>\r\n                        </div>\r\n                    </span>\r\n                \r\n                    <br /><p> </p>\r\n\r\n                </div>\r\n\r\n                // <UserTip key={data.id} data={data} />\r\n\r\n                // now need to format what looks like\r\n\r\n            );\r\n        })\r\n        ) : (\r\n        // <h3>No data yet</h3>\r\n\r\n          <div>\r\n            <br/>\r\n            <h4>Want to post helpful tips for others? Create an account to submit your tips.</h4>\r\n            <h4>If you already have an account Login to see your tips.</h4>\r\n          </div>\r\n\r\n        );\r\n    }\r\n\r\n    //Get Likes\r\n    // const[tipLikes, setTipLikes] = useState(\"\");\r\n    // function getLikes(tip)\r\n    // {\r\n    //     console.log(\"in tip getLikes\");\r\n\r\n    //     const jwt = sessionStorage.getItem('jwt');\r\n    //     console.log(jwt);\r\n\r\n    //     var noLikes = 0;\r\n\r\n    //     axios({\r\n    //         method: 'get',\r\n    //         url: 'http://localhost:8080/like/findByTipId',\r\n    //         params: {tipId : tip.id},\r\n    //         headers: { \"Authorization\" : `Bearer ${jwt}`}\r\n    //     }).then(response=>{\r\n\r\n    //         console.log(\"tl res data= \", response.data);\r\n    //         console.log(\"tl count= \", response.data.length);\r\n    //         noLikes = response.data.length;\r\n    //         setTipLikes(response.data.length);\r\n\r\n    //         return noLikes;\r\n    //     })\r\n    //     .catch(error=>{\r\n    //         console.log(error);\r\n    //     })\r\n    //     return noLikes;\r\n    // }\r\n\r\n\r\n    function getLikes(tip)\r\n    {\r\n        const jwt = sessionStorage.getItem('jwt');\r\n        console.log(jwt, tip.id);\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/like/countByTipId',\r\n            params: {tipId : tip.id},\r\n            headers: { \"Authorization\" : `Bearer ${jwt}`}\r\n        }).then(response=>{\r\n\r\n            console.log(\"tl2 res data= \", response.data);\r\n            console.log(\"tl2 count= \", response.data.length);\r\n            // noLikes = response.data.length;\r\n            // setTipLikes(response.data.length);\r\n\r\n            setLikeno(response.data.length);\r\n\r\n            // return noLikes;\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n        // return noLikes;\r\n    }\r\n\r\n\r\n    function editTip(tipID) {\r\n        // event.preventDefault();\r\n\r\n        if(validateForm()){\r\n\r\n            const jwt = sessionStorage.getItem('jwt');\r\n            console.log(jwt);\r\n\r\n            axios({\r\n                method: 'put',\r\n                url: 'http://localhost:8080/tip/' + tipID,\r\n                // params: {id: tipID},\r\n                data: {\r\n                    tipCategory: tipCategory.current.value,\r\n                    tipString: tipString.current.value,\r\n                    // author: userdata,\r\n                    author: {\r\n                        id: userdata.id,\r\n                        name: userdata.name,\r\n                        email: userdata.email,\r\n                        password: userdata.password,\r\n                        buyer_seller: userdata.buyer_seller,\r\n                    }\r\n                },\r\n                headers: { \"Authorization\" : `Bearer ${jwt}`,\r\n                \"Access-Control-Allow-Origin\": \"http://localhost:8080\"}\r\n            }).then(response=>{\r\n                console.log(response);\r\n                if (response.status === 200){\r\n                    alert(\"Tip updated.\")\r\n                    getAllData();//\r\n                }\r\n            }).then(()=>{\r\n                tipCategory.current.value=\"empty\";\r\n                tipString.current.value=\"empty\";\r\n                author.current.value=0;\r\n\r\n                getAllData();// not updating the tipString for some reason\r\n            })\r\n            .catch(error=>{\r\n                console.log(error);\r\n            })\r\n        }\r\n    }\r\n\r\n    function deleteTip(tipID) {\r\n        const jwt = sessionStorage.getItem('jwt');\r\n        console.log(jwt);\r\n\r\n        axios.delete('http://localhost:8080/tip/' + tipID,\r\n            // params: {id: tipID},\r\n            {headers: { \"Authorization\" : `Bearer ${jwt}`,\r\n            \"Access-Control-Allow-Origin\": \"http://localhost:8080\"},\r\n            mode: 'cors'\r\n        }).then(response=>{\r\n            console.log(response);\r\n            if (response.status === 201){\r\n                alert(\"Tip deleted.\")\r\n            }\r\n        }).then(()=>{\r\n            tipCategory.current.value=\"emptyD\";\r\n            tipString.current.value=\"emptyD\";\r\n            author.current.value=100;\r\n\r\n            getAllData();// not updating after\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    ///////////////////\r\n    // tips.js\r\n    const tabSwitch = () => {\r\n        const tabs = document.querySelectorAll(\"[data-tab-value]\");\r\n        const tabInfos = document.querySelectorAll(\"[data-tab-info]\");\r\n    \r\n        tabs.forEach((tab) => {\r\n          tab.addEventListener(\"click\", () => {\r\n            const target = document.querySelector(tab.dataset.tabValue);\r\n    \r\n            tabInfos.forEach((tabInfo) => {\r\n              tabInfo.classList.remove(\"active\");\r\n            });\r\n            target.classList.add(\"active\");\r\n          });\r\n        });\r\n      };\r\n\r\n\r\n    ////////\r\n    // sort\r\n\r\n    // const orderSort = useRef(\"Newest First\");\r\n\r\n    const order = (/*data*/) => {\r\n        // data.sort((a, b) => {\r\n\r\n        \r\n        //     if (orderSort.current.value === \"Newest First\")\r\n        //     {\r\n        //         // date value\r\n        //     }\r\n        //     if (orderSort.current.value === \"Oldest First\")\r\n        //     {\r\n        //         // date value\r\n        //     }\r\n        //     if (orderSort.current.value === \"Most Popular\")\r\n        //     {\r\n        //         // likes value\r\n        //         data.sort(function(a, b){return a - b});\r\n        //     }\r\n        //     if (orderSort.current.value === \"Least Popular\")\r\n        //     {\r\n        //         // likes value\r\n        //         data.sort(function(a, b){return b - a});\r\n        //     }\r\n        // })\r\n\r\n        if (orderSort.current.value === \"Newest First\")\r\n        {\r\n            setOSort(\"Newest First\");\r\n        }\r\n        if (orderSort.current.value === \"Oldest First\")\r\n        {\r\n            setOSort(\"Oldest First\");\r\n        }\r\n    }\r\n\r\n    /////////\r\n    // Like\r\n    // const like = (event) =>\r\n    // function like(tip)\r\n    // const like = (tip, index) =>\r\n    // {\r\n    //     // event.preventDefault();\r\n    //     const jwt = sessionStorage.getItem('jwt');\r\n    //     console.log(jwt);\r\n\r\n    //     if (result[index].some(e => e.user.email !== loggedInUser))\r\n    //     {\r\n    //     axios({\r\n    //         method: 'post',\r\n    //         url: 'http://localhost:8080/like',\r\n    //         data: {\r\n    //             user: {\r\n    //                 id: userdata.id,\r\n    //                 name: userdata.name,\r\n    //                 email: userdata.email,\r\n    //                 password: userdata.password,\r\n    //                 buyer_seller: userdata.buyer_seller,\r\n    //             },\r\n    //             tip: tip\r\n    //         },\r\n    //         headers: { \"Authorization\" : `Bearer ${jwt}`}\r\n    //     }).then(response=>{\r\n    //         console.log(response);\r\n    //         if (response.status === 201){\r\n    //             alert(\"Tip like created.\")\r\n\r\n    //             ////////\r\n    //             getAllData();\r\n    //             // getLikes(tip.id);\r\n    //         }\r\n    //     // }).then(()=>{\r\n    //     //     tipCategory.current.value=\"\";\r\n    //     //     tipString.current.value=\"\";\r\n    //     //     // author.current.value=0;\r\n    //     })\r\n    //     .catch(error=>{\r\n    //         console.log(error);\r\n    //     })\r\n    //     } else\r\n    //     {\r\n    //         alert(\"already exists\");\r\n    //     }\r\n\r\n    // }\r\n\r\n    // const[tipLikes, setTipLikes] = useState(\"\");\r\n    // const [result, setResult] = useState([]);\r\n    // // const getLikes = (tip) =>\r\n    // function getLikes(tip)\r\n    // {\r\n    //     console.log(\"in getLikes\");\r\n    //     // setTipLikes(0);\r\n\r\n    //     const jwt = sessionStorage.getItem('jwt');\r\n    //     console.log(jwt);\r\n\r\n    //     var noLikes = 0;\r\n\r\n    //     axios({\r\n    //         method: 'get',\r\n    //         url: 'http://localhost:8080/like/findByTipId',\r\n    //         params: {tipId : tip},\r\n    //         headers: { \"Authorization\" : `Bearer ${jwt}`}\r\n    //     }).then(response=>{\r\n    //         // console.log(\"tipId= \", tip, \" nolikes= \", response.data.user.length);\r\n    //         // if (response.status === 201){\r\n    //         //     alert(\"Tip like created.\")\r\n    //         //     ////////\r\n    //         //     getAllData();\r\n    //         // }\r\n\r\n    //         // var obj = JSON.parse(response.data);\r\n    //         // // var count = Object.keys(response.data.user[0]).length;\r\n    //         // // var count = response.data;\r\n    //         // var count = Object.keys(obj).length;\r\n    //         // // console.log(\"count = \", _.keys(count[0]).length);\r\n    //         // console.log(\"count= \", count);\r\n\r\n    //         console.log(\"res data= \", response.data);\r\n    //         console.log(\"count= \", response.data.length);\r\n    //         noLikes = response.data.length;\r\n    //         // setTipLikes(response.data.length);\r\n\r\n\r\n    //         setResult(result => [...result, response]);\r\n\r\n\r\n    //         return noLikes;\r\n\r\n    //     // }).then(()=>{\r\n    //     //     tipCategory.current.value=\"\";\r\n    //     //     tipString.current.value=\"\";\r\n    //     //     // author.current.value=0;\r\n    //     })\r\n    //     .catch(error=>{\r\n    //         console.log(error);\r\n    //     })\r\n    //     return noLikes;\r\n    //     // return response.data.length;\r\n    // }\r\n\r\n    return (\r\n        // <div>\r\n        //     <form className=\"tipinput\" noValidate onSubmit={handleSubmit}>\r\n        //         <label className=\"labelText\">tipCategory: </label>\r\n        //         <input type=\"text\" ref={tipCategory} required/><br/><br/>\r\n\r\n        //         <label className=\"labelText\">tipString:</label>\r\n        //         <input type=\"text\" ref={tipString} name=\"tipString\" required/><br/><br/>\r\n\r\n        //         <label className=\"labelText\">author:</label>\r\n        //         <input type=\"text\" ref={author} name=\"author\" required/><br/><br/>\r\n\r\n        //         <input type=\"submit\" value=\"Submit\"/>\r\n        //     </form>\r\n\r\n        //     {/* <p></p> */}\r\n        //     <p>tips below</p>\r\n        //     {/* <button onClick={checkuserdata}>click me</button> */}\r\n        //     {/* <p>{tipdata.tipCategory}</p>\r\n        //     <p>{tipdata.tipString}</p> */}\r\n        //     <div className=\"box\">\r\n        //         {/* {data} */}\r\n        //         <p>---</p>\r\n                // {displayData()}\r\n        //         {/* {displayDataCat()} */}\r\n        //         {dataCat}\r\n        //     </div>\r\n\r\n        //     {/* <button onClick={checkuserdata}>click me</button> */}\r\n\r\n        //     {/* must update displayed data after posting / putting (editing) tip */}\r\n        // </div>\r\n\r\n\r\n        <section className=\"mainContent\">\r\n            <section>\r\n                <h3>Energy Saving Tips</h3>\r\n                <br />\r\n                <p>\r\n                    We know not everyone can afford to switch to better renewable energy\r\n                    yet, so here's some tips to help you out saving energy and money for\r\n                    energy.\r\n                </p>\r\n            </section>\r\n\r\n            <section>\r\n                <div className=\"tabs\">\r\n                    {/* need to figure out tab switching + put the css in*/}\r\n                    <span data-tab-value=\"#tab_1\" onClick={tabSwitch}>\r\n                    Tips from Us\r\n                    </span>\r\n                    <span data-tab-value=\"#tab_2\" onClick={tabSwitch}>\r\n                    Tips from All\r\n                    </span>\r\n                    <span data-tab-value=\"#tab_3\" onClick={tabSwitch}>\r\n                    Tips from You\r\n                    </span>\r\n                </div>\r\n                <div className=\"tab-content\">\r\n\r\n                    {/* tab 1 */}\r\n                    <div className=\"tabs_tab active\" id=\"tab_1\" data-tab-info>\r\n                    {/* <!-- group em together properly now --> */}\r\n\r\n                        <div className=\"tipLine\">\r\n                            <div className=\"tip\">\r\n                                <div className=\"beforeH\">\r\n                                    <span>\r\n                                    <h4>\r\n                                        Leaving the room?\r\n                                        <br />\r\n                                        <br />\r\n                                        Turn it off\r\n                                    </h4>\r\n                                    </span>\r\n                                    <img src={lightbulb} alt=\"lightbulb\" id=\"lightbulb\" />\r\n                                </div>\r\n                                <div className=\"afterH\">\r\n                                    Turning lights off when you leave the room or are simply not\r\n                                    using them could save you £25 per year on energy bills\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tip\">\r\n                                <div className=\"beforeH\">\r\n                                    <span>\r\n                                    <strong>\r\n                                        Not using it?\r\n                                        <br />\r\n                                        <br />\r\n                                        Unplug it\r\n                                    </strong>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"afterH\">\r\n                                    If you're not using your electrical devices, make sure you\r\n                                    unplug them\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    <div className=\"tipLine\">\r\n                        <div className=\"tip\">\r\n                            <div className=\"beforeH\">\r\n                                <span>\r\n                                <strong>\r\n                                    At 100%?\r\n                                    <br />\r\n                                    <br />\r\n                                    Stop charging it\r\n                                </strong>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"afterH\">\r\n                                Make sure you unplug when your devices reach full-charge\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tip\">\r\n                            <div className=\"beforeH\">\r\n                                <span>\r\n                                <strong>\r\n                                    Use an air dryer\r\n                                    <br />\r\n                                    <br />\r\n                                    Not a tumble dryer\r\n                                </strong>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"afterH\">\r\n                                Don't use the tumble dryer when it's not necessary, hanging\r\n                                clothes on drying racks could save £70 a year\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tipLine\">\r\n                        <div className=\"tip\">\r\n                            <div className=\"beforeH\">\r\n                                <span>\r\n                                <strong>\r\n                                    Shower don't Bathe\r\n                                    <br />\r\n                                </strong>\r\n                                </span>\r\n                                <img src={shower} alt=\"shower\" id=\"shower\" />\r\n                            </div>\r\n                            <div className=\"afterH\">\r\n                                Swapping just one bath for a short shower a week could save\r\n                                £20 a year\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tip\">\r\n                            <div className=\"beforeH\">\r\n                                <span>\r\n                                <strong>\r\n                                    Use Kettles wisely\r\n                                    <br />\r\n                                    <br />\r\n                                    Avoid overfilling\r\n                                </strong>\r\n                                </span>\r\n                                <img src={kettle} alt=\"kettle\" id=\"kettle\" />\r\n                            </div>\r\n                            <div className=\"afterH\">\r\n                                Using just the right amount of water when boiling your kettle\r\n                                could save £13 a year\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* tab 2 */}\r\n                <div className=\"tabs_tab\" id=\"tab_2\" data-tab-info>\r\n                    <p>Browse the helpful tips posted by your fellow users.</p>\r\n                    <br />\r\n                    <div className=\"tab2\">\r\n                    <div className=\"allTips\">\r\n                        {/* <p>box</p>\r\n                                    <p>gonna have a filter</p>\r\n                                    <p>then display tips underneath</p>\r\n                                    <br/> */}\r\n                        <div id=\"aTsameLine\">\r\n                            <span>\r\n                                Category:\r\n                                <select id=\"tipFilterCategory\" ref={catSort} onChange={(e) => setCSort(e.target.value)}>\r\n                                    <option></option>\r\n                                    <option id=\"homeOption\">Home</option>\r\n                                    <option id=\"carOption\">Car</option>\r\n                                    <option >Transport</option>\r\n                                </select>\r\n                            </span>\r\n                            <span>\r\n                                Order:\r\n                                <select id=\"tipFilterCategory\" ref={orderSort} onChange={(e) => setOSort(e.target.value)}>\r\n                                    <option id=\"newest\">Newest First</option>\r\n                                    <option id=\"oldest\">Oldest First</option>\r\n                                    {/* need to implement */}\r\n                                    {/* <option id=\"mostPop\">Most Popular</option>\r\n                                    <option id=\"leastPop\">Least Popular</option> */}\r\n                                </select>\r\n                            </span>\r\n                            {/* <!-- proper name -> organise similar elements for css --> */}\r\n                            {/* <span>\r\n                                <button id=\"tipFilterButton\" onClick={() => order}>Filter</button>\r\n                            </span> */}\r\n                        </div>\r\n                        <div className=\"tipBoxes\">\r\n\r\n                            {/*  */}\r\n                            <div className=\"box\">\r\n                                {displayAllTipData()}\r\n                            </div>\r\n\r\n\r\n                            {/* <div className=\"tipBox\">\r\n                                <div className=\"firstLine\">\r\n                                    <span className=\"tipCategory\">\r\n                                        <p>Home</p>\r\n                                    </span>\r\n                                    <span className=\"postInfo\">\r\n                                        <span className=\"tipAuthor\">posted by: smithy</span>\r\n                                        <span className=\"tipDateTime\">- 05/01/2023 15:25</span>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"secondLine\">\r\n                                    <span className=\"tipString\">\r\n                                        <p>\r\n                                        Remember to keep all windows and doors close to stop\r\n                                        heat escaping.\r\n                                        </p>\r\n                                    </span>\r\n                                    <span className=\"likes\">\r\n                                        <span className=\"tipLikes\">\r\n                                        {/* <div id=\"number\" value=\"0\">0</div> *}\r\n                                        <p>1 Likes</p>\r\n                                        </span>\r\n                                        <span className=\"likeTip\">\r\n                                        <button\r\n                                            id=\"likeTipButton\"\r\n                                            // onClick={\r\n                                            //     document.getElementById(\"number\").innerHTML++\r\n                                            // }\r\n                                        >\r\n                                            Like\r\n                                        </button>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* <div className=\"tipBox\">\r\n                                <div className=\"firstLine\">\r\n                                    <span className=\"tipCategory\">\r\n                                        <p>Car</p>\r\n                                    </span>\r\n                                    <span className=\"postInfo\">\r\n                                        <span className=\"tipAuthor\">posted by: jane doe</span>\r\n                                        <span className=\"tipDateTime\">- 05/01/2023 15:25</span>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"secondLine\">\r\n                                    <span className=\"tipString\">\r\n                                        <p>\r\n                                        Never leave the engine running. Even if it is for only a\r\n                                        couple minutes, it's better to turn it off.\r\n                                        </p>\r\n                                    </span>\r\n                                    <span className=\"likes\">\r\n                                        <span className=\"tipLikes\">\r\n                                        <p>44 Likes</p>\r\n                                        </span>\r\n                                        <span className=\"likeTip\">\r\n                                        <button id=\"likeTipButton\">Like</button>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* tab 3 */}\r\n                <div className=\"tabs_tab\" id=\"tab_3\" data-tab-info>\r\n                    {/* <div className=\"tab3\"> */}\r\n                    <span>You currently have </span>\r\n                    {/* <span>2</span> */}\r\n                    <span>{data.length}</span>\r\n                    <span> tips posted.</span>\r\n                    {/* <p>{data.length}</p> */}\r\n\r\n                    {/* submit tips */}\r\n                    <div className=\"submitTips\">\r\n                        <div>\r\n                            <p>Do you have helpful tips for others?</p>\r\n                            <span>Category: </span>\r\n                            <select id=\"tipCategory\" ref={tipCategory} required>\r\n                                <option></option>\r\n                                <option id=\"homeOption\">Home</option>\r\n                                <option is=\"carOption\">Car</option>\r\n                                <option >Transport</option>\r\n                            </select>\r\n                        </div>\r\n                        <div id=\"textArea\">\r\n                            <textarea\r\n                                id=\"tA\"\r\n                                placeholder=\"Enter your Tip here...\"\r\n                                ref={tipString} required\r\n                            ></textarea>\r\n                        </div>\r\n                        <div id=\"tipButtonDiv\">\r\n                            <button id=\"tipButton\" onClick={handleSubmit}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"tab3\"> */}\r\n                    <div className=\"userTips\">\r\n                        <br />\r\n                        <p>\r\n                        <strong>Your Tips:</strong>\r\n                        </p>\r\n                        {/* <br/> */}\r\n\r\n                        <div className=\"tbox\">\r\n                            <div className=\"lbox\">\r\n                                {displayData()}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <div className=\"submitTipsN\">\r\n\r\n                            <div className=\"userTipBoxN\">\r\n                                <span className=\"userTipInfoN\">\r\n                                    <div className=\"firstLine\">\r\n                                        <span className=\"tipCategory\">\r\n                                            <p>Car</p>\r\n                                        </span>\r\n                                        <span className=\"postInfo\">\r\n                                            <span className=\"tipDateTime\">\r\n                                            {\" \"}\r\n                                            posted - 05/01/2023 15:25\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"secondLine\">\r\n                                        <span className=\"userTipString\">\r\n                                            <p>\r\n                                            Never leave the engine running. Even if it is for\r\n                                            only a couple minutes, it's better to turn it off.\r\n                                            </p>\r\n                                        </span>\r\n                                        <span className=\"userLikes\">\r\n                                            <span className=\"userTipLikes\">\r\n                                                <p>44 Likes</p>\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                </span>\r\n                                <span className=\"modifyTip\">\r\n                                    <img\r\n                                    src={pencil}\r\n                                    alt=\"editingButton\"\r\n                                    id=\"edit\"\r\n                                    width=\"25px\"\r\n                                    height=\"35px\"\r\n                                    />\r\n                                    <img\r\n                                    src={bin}\r\n                                    alt=\"deletingButton\"\r\n                                    id=\"delete\"\r\n                                    width=\"25px\"\r\n                                    height=\"35px\"\r\n                                    />\r\n                                </span>\r\n\r\n                        {/* need editing, deleting stuff */}\r\n                        {/* </div> */}\r\n                            </div>\r\n                        {/* <div className=\"info\"></div>\r\n                                        <div id=\"textAreaN\">\r\n                                            <textarea id=\"tAN\" placeholder=\"Enter your Tip here...\" ></textarea>\r\n                                        </div>\r\n                                        <div id=\"tipButtonDivN\">\r\n                                            <button id=\"tipButtonN\">Submit</button>\r\n                                        </div> *}\r\n                        </div> */}\r\n\r\n                    {/* must fix css */}\r\n                        {/* <div>\r\n                            <div className=\"userTipBoxN\">\r\n                                <span className=\"userTipInfoN\">\r\n                                    <div className=\"firstLine\">\r\n                                        <span className=\"tipCategory\">\r\n                                            <p>Home</p>\r\n                                        </span>\r\n                                        <span className=\"postInfo\">\r\n                                            <span className=\"tipDateTime\">\r\n                                            {\" \"}\r\n                                            posted - 06/01/2023 15:28\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"secondLine\">\r\n                                        <span className=\"userTipString\">\r\n                                            <p>\r\n                                            Only turn the heating on when it's necessary, layer\r\n                                            up clothing instead.\r\n                                            </p>\r\n                                        </span>\r\n                                        <span className=\"userLikes\">\r\n                                            <span className=\"userTipLikes\">\r\n                                            <p>207 Likes</p>\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                </span>\r\n                                <span className=\"modifyTip\">\r\n                                    <img\r\n                                    src={pencil}\r\n                                    alt=\"editingButton\"\r\n                                    id=\"edit\"\r\n                                    width=\"25px\"\r\n                                    height=\"35px\"\r\n                                    />\r\n                                    <img\r\n                                    src={bin}\r\n                                    alt=\"deletingButton\"\r\n                                    id=\"delete\"\r\n                                    width=\"25px\"\r\n                                    height=\"35px\"\r\n                                    />\r\n                                </span>\r\n\r\n                        {/* need editing, deleting stuff *}\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    </div>\r\n                {/* </div> */}\r\n            </div>\r\n        </section>\r\n    </section>\r\n    )\r\n}","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\Quiz.js",["145"],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\Quizhandler.jsx",["146","147"],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\Questions.js",[],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\QuizComponents\\QuestionHandler.jsx",[],[],"C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\components\\Footer.js",["148","149","150","151"],[],"// import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// import {AO} from '../AO';\r\n\r\nexport default function Footer(){\r\n\r\n    // const [loggedInUser, setLoggedinUser] = useState(\"\");\r\n    return (\r\n    //     <header className=\"App-header\">\r\n    //         {/* refreshAO() */}\r\n    //         {/* <span className=\"title\"><h1>EnergyAware</h1></span>\r\n    //         <span><div className=\"AccountOptions\">\r\n    //             {/* <nav className=\"AO-nav\">\r\n    //                 <Link className=\"AO-link\" to={'/register'}>Sign Up</Link>\r\n    //                 <p className=\"AO-or\">or</p>\r\n    //                 <Link className=\"AO-link\" to={'/login'}>Login</Link>\r\n    //             </nav> */}\r\n    //         </div></span> */}\r\n    //     </header>\r\n\r\n        <footer className=\"App-footer\">\r\n            <div>\r\n                <strong>Address</strong>\r\n                <p>23 Leila Junction</p>\r\n                <p>Uxbridge</p>\r\n                <p>UB46 7BY</p>\r\n            </div>\r\n            <div>\r\n                <strong>Contact Details</strong>\r\n                <div className=\"cD\">\r\n                    <div className=\"contactDetails\">\r\n                        <p>Email:</p>\r\n                        <p>Telephone:</p>\r\n                    </div>\r\n                    <div className=\"cDetails\">\r\n                        <p>energyaware.moreinfo@gmail.com</p>\r\n                        <p>+44 2235678195</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <strong>Social Media</strong>\r\n                <p>Instagram</p>\r\n                <p>Facebook</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\TipsComponents\\Likes.js",["152","153","154"],[],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nimport '../Tips.css';\r\n\r\n// export default function AllTip(loggedInUser)\r\n// export default \r\nconst Likes = (props) => \r\n{\r\n    const {tip} = props;\r\n    console.log(\"tip= \", tip);\r\n\r\n    const[tipLikes, setTipLikes] = useState(\"\");\r\n    function getLikes(tip)\r\n    {\r\n        console.log(\"in tip getLikes\");\r\n\r\n        const jwt = sessionStorage.getItem('jwt');\r\n        console.log(jwt);\r\n\r\n        var noLikes = 0;\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/like/findByTipId',\r\n            params: {tipId : tip.id},\r\n            headers: { \"Authorization\" : `Bearer ${jwt}`}\r\n        }).then(response=>{\r\n\r\n            console.log(\"tl res data= \", response.data);\r\n            console.log(\"tl count= \", response.data.length);\r\n            noLikes = response.data.length;\r\n            setTipLikes(response.data.length);\r\n\r\n            return noLikes;\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n        return noLikes;\r\n    }\r\n\r\n    // getIsLiked(allTipData);\r\n    getLikes(tip);\r\n    // return (\r\n    //     <div>\r\n    //         {/* <p>{tipLikes} Likes</p> */}\r\n    //         <p>{tipLikes}</p>\r\n    //      </div>\r\n\r\n    // )\r\n    // return {tipLikes};\r\n\r\n    return tipLikes;\r\n};\r\n\r\nexport default Likes;","C:\\Users\\SLL737\\Documents\\Uni\\Group Project\\Group46\\testgroupproject\\src\\Pages\\TipsComponents\\AllTip.js",["155","156","157","158","159","160","161","162"],[],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nimport '../Tips.css';\r\n\r\nimport Likes from './Likes';\r\n\r\n// export default function AllTip(loggedInUser)\r\n// export default \r\nconst AllTip = (props) => \r\n{\r\n    const {loggedInUser, allTipData, order} = props;\r\n    console.log(\"atd= \", allTipData);\r\n\r\n    // const [loggedInUser, setLoggedinUser] = useOutletContext();\r\n    // const [userdata, setUserdata] = useState(\"\");\r\n\r\n    // const [allTipData, setAllTipData] = useState(\"\");\r\n\r\n    // const getAllTipData = () => {\r\n    //     const jwt = sessionStorage.getItem('jwt');\r\n    //     console.log('userdata.id = ', userdata.id);\r\n    //     console.log('userdata = ', userdata);\r\n\r\n    //     axios({\r\n    //         method: 'get',\r\n    //         url: 'http://localhost:8080/tip',\r\n    //         headers: {\"Authorization\" : `Bearer ${jwt}`}})\r\n    //         .then((response) => {\r\n    //             console.log(response.data);\r\n    //             console.log(\"rd = \", response.data);\r\n    //             setAllTipData(response.data);\r\n\r\n    //             ////////////// date\r\n    //             console.log(\"date = \", response.date);\r\n    //             // backend - get createAt and updatedAt dates\r\n\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(error);\r\n    //         });\r\n    // };\r\n\r\n    // const displayAllTipData = () => {\r\n    //     return allTipData ? (\r\n    //     allTipData.map((allTipData, index) => {\r\n    //         return (\r\n    //             <div className=/*\"userTipBoxN\"*/\"tipBox\">\r\n    //                 <span className=/*\"userTipInfoN\"*/\"box\" key={allTipData.id}>\r\n    //                     <div className=\"firstLine\">\r\n    //                         <span className=\"tipCategory\">\r\n    //                         <p>{allTipData.tipCategory}</p>\r\n    //                         </span>\r\n\r\n    //                         {/* <span>{allTipData.indexOf(current)}</span> */}\r\n    //                         <span>={index}=</span>\r\n\r\n    //                         <span className=\"postInfo\">\r\n    //                             <span className=\"tipAuthor\">posted by: {/*smithy*/}{allTipData.author.name}</span>\r\n    //                             <span className=\"tipDateTime\">\r\n    //                                 {/*{\" \"}{/*posted*/} - {/*06/01/2023 15:28*/}--/--/---- --:--\r\n    //                             </span>\r\n    //                         </span>\r\n    //                     </div>\r\n    //                     <div className=\"secondLine\">\r\n    //                         {/* <span className=\"userTipString\"> */}\r\n    //                         <textarea className=\"userTipStringAll\" /*\"ta*/readOnly>{allTipData.tipString}</textarea>\r\n    //                         {/* </span> */}\r\n    //                         {/* <span className=\"userLikes\">\r\n    //                             <span className=\"userTipLikes\">\r\n    //                                 <p>{/*207*}- Likes</p>\r\n    //                             </span>\r\n    //                             <span className=\"likeTip\">\r\n    //                                 <button id=\"likeTipButton\">Like</button>\r\n    //                             </span>\r\n    //                         </span> */}\r\n    //                         <span className=\"likes\">\r\n    //                             <span className=\"tipLikes\">\r\n    //                                 {/* <p>-{() =>getLikes(allTipData.id)}-{tipLikes} Likes</p> */}\r\n    //                                 {/* <p>{getLikes(allTipData.id)}= Likes</p> */}\r\n    //                                 {/* <p>Likes</p> */}\r\n    //                                 {() => getLikes(allTipData.id)}\r\n    //                                 <p>{result[index]}-testing</p>\r\n    //                                 {console.log(\"rindex=\", result[index])}\r\n    //                             </span>\r\n    //                             <span className=\"likeTip\">\r\n    //                                 <button id=\"likeTipButton\" onClick={() => like(allTipData, index)}>Like</button>\r\n    //                             </span>\r\n    //                         </span>\r\n    //                         {/* <div className=\"modifyTip\">  */}\r\n    //                         {/* </div> */}\r\n    //                     </div>\r\n    //                 </span>\r\n                \r\n    //                 {/* <br /><p> </p> */}\r\n\r\n    //             </div>\r\n\r\n    //             // <UserTip key={data.id} data={data} />\r\n\r\n    //             // now need to format what looks like\r\n\r\n    //         );\r\n    //     })\r\n    //     ) : (\r\n    //     <h3>No data yet</h3>\r\n    //     );\r\n    // }\r\n\r\n    useEffect(() => {\r\n        // getAllTipData();\r\n        // getLikes(allTipData);\r\n        getUserData();\r\n    }, []);\r\n    // , [allTipData]);\r\n\r\n    const [userdata, setUserdata] = useState(\"\");\r\n\r\n    const getUserData = () => {\r\n        console.log(\"gud liu=\", loggedInUser);\r\n        if(loggedInUser!==\"\" && userdata===\"\"){\r\n            console.log(\"in if\");\r\n\r\n            console.log(\"liu=\", loggedInUser);      //loggedInUser is just email not user\r\n\r\n            const jwt = sessionStorage.getItem('jwt');\r\n            console.log(jwt);\r\n            axios({\r\n                method: 'get',\r\n                url: 'http://localhost:8080/user/findByEmail',\r\n                // params: {email: loggedInUser.email},\r\n                params: {email: loggedInUser},\r\n                headers: {\"Authorization\" : `Bearer ${jwt}`}\r\n            }).then((response) => {\r\n                if (response.status === 200){\r\n                    console.log(response.data);\r\n                    console.log('response.data = ', response.data);\r\n                    console.log(response.data.userType);\r\n                    setUserdata(response.data);\r\n                    console.log('userdata in then = ', userdata);\r\n                    // getAllData();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.response);\r\n                setUserdata(\"Data failure\");\r\n            })\r\n\r\n            ///////////////\r\n            console.log('userdata in check logged in = ', userdata);\r\n\r\n            // const jwt = sessionStorage.getItem('jwt');\r\n            console.log(jwt);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"else\");\r\n            const jwt = sessionStorage.getItem('jwt');\r\n            console.log(jwt);\r\n            axios({\r\n                method: 'get',\r\n                url: 'http://localhost:8080/user/findByEmail',\r\n                // params: {email: loggedInUser.email},\r\n                params: {email: 'test@email.com'},\r\n                headers: {\"Authorization\" : `Bearer ${jwt}`}\r\n            }).then((response) => {\r\n                if (response.status === 200){\r\n                    console.log(response.data);\r\n                    console.log('response.data = ', response.data);\r\n                    console.log(response.data.userType);\r\n                    setUserdata(response.data);\r\n                    console.log('userdata in then = ', userdata);\r\n                    // getAllData();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.response);\r\n                setUserdata(\"Data failure\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    /////////\r\n    // Like\r\n    // const like = (event) =>\r\n    // function like(tip)\r\n    const like = (tip, index) =>\r\n    {\r\n        // event.preventDefault();\r\n\r\n        if (userdata === \"\")\r\n        {\r\n            alert(\"Login to Like Tips\");\r\n        }\r\n        else\r\n        {\r\n\r\n\r\n        const jwt = sessionStorage.getItem('jwt');\r\n        console.log(jwt);\r\n\r\n        // if (result[index].some(e => e.user.email !== loggedInUser))\r\n        if(isLiked === false)//(isLiked === \"\")\r\n        {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost:8080/like',\r\n            data: {\r\n                user: {\r\n                    id: userdata.id,\r\n                    name: userdata.name,\r\n                    email: userdata.email,\r\n                    password: userdata.password,\r\n                    buyer_seller: userdata.buyer_seller,\r\n                },\r\n                tip: tip\r\n            },\r\n            headers: { \"Authorization\" : `Bearer ${jwt}`}\r\n        }).then(response=>{\r\n            console.log(response);\r\n            if (response.status === 201){\r\n                alert(\"Tip like created.\")\r\n\r\n\r\n                /*\r\n                figure out how to update like number when liked\r\n                \r\n                think done\r\n                */\r\n                getLikes(tip);\r\n\r\n                ////////\r\n                // getAllData();\r\n                // getLikes(tip.id);\r\n            }\r\n        // }).then(()=>{\r\n        //     tipCategory.current.value=\"\";\r\n        //     tipString.current.value=\"\";\r\n        //     // author.current.value=0;\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n        } else\r\n        {\r\n            // console.log()\r\n            alert(\"already exists\");\r\n        }\r\n        }\r\n    }\r\n\r\n    const [isLiked, setIsLiked] = useState(false);//useState(\"\");\r\n\r\n    const getIsLiked = (tip) => {\r\n        const jwt = sessionStorage.getItem('jwt');\r\n        console.log(jwt);\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/like/findByTipId',\r\n            params: {tipId : tip.id},\r\n            headers: { \"Authorization\" : `Bearer ${jwt}`}\r\n        }).then(response=>{\r\n            console.log(\"res data= \", response.data);\r\n            console.log(\"count= \", response.data.length);\r\n            // noLikes = response.data.length;\r\n            // setTipLikes(response.data.length);\r\n\r\n            if (response.data.find(e => e.user.email === loggedInUser))\r\n            {\r\n                setIsLiked(\"true\");\r\n            }\r\n\r\n            // setResult(result => [...result, response]);\r\n            // setRes(response.data);\r\n\r\n        // }).then(()=>{\r\n        //     tipCategory.current.value=\"\";\r\n        //     tipString.current.value=\"\";\r\n        //     // author.current.value=0;\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n        // return \"output\";\r\n    }\r\n\r\n    const[tipLikes, setTipLikes] = useState(\"\");\r\n    // const [result, setResult] = useState([]);\r\n    // const [res, setRes] = useState(\"\");\r\n    // const getLikes = (tip) =>\r\n    function getLikes(tip)\r\n    {\r\n        console.log(\"in getLikes\");\r\n        // setTipLikes(0);\r\n\r\n        const jwt = sessionStorage.getItem('jwt');\r\n        console.log(jwt);\r\n\r\n        var noLikes = 0;\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/like/findByTipId',\r\n            params: {tipId : tip.id},\r\n            headers: { \"Authorization\" : `Bearer ${jwt}`}\r\n        }).then(response=>{\r\n            // console.log(\"tipId= \", tip, \" nolikes= \", response.data.user.length);\r\n            // if (response.status === 201){\r\n            //     alert(\"Tip like created.\")\r\n            //     ////////\r\n            //     getAllData();\r\n            // }\r\n\r\n            console.log(\"res data= \", response.data);\r\n            console.log(\"count= \", response.data.length);\r\n            noLikes = response.data.length;\r\n            setTipLikes(response.data.length);\r\n\r\n\r\n            // setResult(result => [...result, response]);\r\n            // setRes(response.data);\r\n\r\n            return noLikes;\r\n\r\n        // }).then(()=>{\r\n        //     tipCategory.current.value=\"\";\r\n        //     tipString.current.value=\"\";\r\n        //     // author.current.value=0;\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n        return noLikes;\r\n        // return response.data.length;\r\n    }\r\n\r\n\r\n    //////////\r\n    // Unlike\r\n    const unlike = (tip, index) =>\r\n    {\r\n        // getUserId();\r\n        // getLikeId(tip, uId);\r\n\r\n        // // getUserId(getLikeId(tip, uId, deleteLike(tip)));\r\n\r\n        console.log(\"ul lId= \", lId);\r\n        deleteLike(tip);\r\n        // // getLikeId(tip, uId);\r\n        // // getUserId();\r\n        // // var dl = await deleteLike(tip);\r\n        // // getLikeId(tip, uId);\r\n        // // getUserId();\r\n\r\n\r\n        // // event.preventDefault();\r\n        // const jwt = sessionStorage.getItem('jwt');\r\n        // console.log(jwt);\r\n\r\n        // console.log(\"in unlike \", tip);\r\n\r\n        // // const userId = getUserId();\r\n        // console.log(\"uI= \", uId);\r\n        // // const likeId = getLikeId(tip, uId);//userId);\r\n        // console.log(\"lI= \", lId);\r\n\r\n        // if (lId !== \"\")\r\n        // {\r\n        //     deleteLike(tip);\r\n        // }\r\n\r\n        // do\r\n        // {\r\n        //     getUserId();\r\n        //     getLikeId(tip, uId);\r\n        // }\r\n        // while (lId === undefined)\r\n\r\n        // if (lId !== undefined)\r\n        // {\r\n        //     console.log(\"in if\");\r\n        //     deleteLike(tip);\r\n        // }\r\n\r\n        // setTimeout(() => deleteLike(tip), 40000);\r\n\r\n    }\r\n\r\n    const [uId, setUserId] = useState();\r\n\r\n    const getUserId = () => {\r\n        const jwt = sessionStorage.getItem('jwt');\r\n        console.log(jwt);\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/user/findByEmail',\r\n            // params: {email: loggedInUser.email},\r\n            params: {email: loggedInUser},\r\n            headers: {\"Authorization\" : `Bearer ${jwt}`}\r\n        }).then((response) => {\r\n            if (response.status === 200){\r\n                console.log(response.data);\r\n                console.log('response.data = ', response.data);\r\n                console.log(response.data.userType);\r\n                // setUserdata(response.data);\r\n                console.log(response.data.id);\r\n                // return response.data.id;\r\n                setUserId(response.data.id);\r\n                // console.log('userdata in then = ', userdata);\r\n                // getAllData();\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.response);\r\n            // setUserdata(\"Data failure\");\r\n            // return 0;\r\n            setUserId(0);\r\n        })\r\n    }\r\n    \r\n    const [lId, setLikeId] = useState(0);\r\n\r\n    const getLikeId = (tip, userId) => {\r\n        const jwt = sessionStorage.getItem('jwt');\r\n        console.log(jwt);\r\n        console.log(\"userId= \", userId);\r\n        console.log(\"tipId= \", tip.id);\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/like/findByTipIdAndUserId',\r\n            // params: {email: loggedInUser.email},\r\n            // params: {email: loggedInUser},\r\n            params: {tipId: tip.id, userId: userId},\r\n            headers: {\"Authorization\" : `Bearer ${jwt}`},\r\n            success: unlike(tip)\r\n        }).then((response) => {\r\n            if (response.status === 200){\r\n                console.log(response.data);\r\n                console.log('response.data tu = ', response.data);\r\n                // return response.data.id;\r\n                setLikeId(response.data);       // not response.data.id as only id is returned not like\r\n\r\n                console.log(\"gLI lId=\", lId);\r\n                // getAllData();\r\n\r\n                // deleteLike(tip);\r\n                // setTimeout(() => deleteLike(tip), 4000);\r\n                // deleteLike(tip, response.data.id);\r\n                // setTimeout(() => deleteLike(tip, response.data.id), 4000);\r\n\r\n                // var dl = await deleteLike(tip);\r\n                // deleteLike(tip);\r\n            }\r\n            if (response.success)\r\n            {\r\n                // unlike(tip);\r\n            }\r\n        }).then(() => {\r\n            // deleteLike(tip);\r\n        }).catch(err => {\r\n            console.log(err.response);\r\n            // setUserdata(\"Data failure\");\r\n            // return \"\";\r\n            // setLikeId(\"\");\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        // action on update of movies\r\n        unlike(allTipData);\r\n        getIsLiked(allTipData);\r\n        getLikes(allTipData);\r\n    }, [lId, isLiked]);\r\n\r\n    const deleteLike = (tip) => {//, likeId) => {\r\n        console.log(\"dL lId=\", lId);\r\n        // console.log(\"dl likeId= \", likeId);\r\n        const jwt = sessionStorage.getItem('jwt');\r\n\r\n        // return new Promise(function(resolve, reject) {\r\n        axios({\r\n            method: 'delete',\r\n            url: 'http://localhost:8080/like/' + lId,//likeId,//lId,\r\n            headers: { \"Authorization\" : `Bearer ${jwt}`,\r\n            \"Access-Control-Allow-Origin\": \"http://localhost:8080\"}\r\n        }).then(response=>{\r\n            console.log(response);\r\n            if (response.status === 200)\r\n            {\r\n                alert(\"Tip like deleted.\");\r\n                getLikes(tip);\r\n                setIsLiked(false);                                      // need to flip button back to like\r\n                // resolve(alert(\"success\"));\r\n            }\r\n            // getLikes(tip);\r\n\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n            // reject(error);\r\n        })\r\n    // });\r\n        // } else {\r\n        //     reject(error);\r\n        // })\r\n    }\r\n\r\n    // return (\r\n    //     <div>\r\n    //         {/* {displayAllTipData()} */}\r\n    //         {/* {getUserData()} */}\r\n    //         <p>//{loggedInUser}//</p>\r\n    //         {/* <p>{res}</p> */}\r\n    //         <p>.{getIsLiked(allTipData)}.{isLiked}.</p>\r\n    //         <p>+{getLikes(allTipData)}, {tipLikes} - Likes</p>\r\n    //         <button id=\"likeTipButton\" onClick={() => like(allTipData/*, index*/)}>Like</button>\r\n    //     </div>\r\n\r\n    // )\r\n\r\n    const setInfo = (tip) => {\r\n        // getUserId();\r\n        getLikeId(tip, userdata.id);//uId);\r\n\r\n        // unlike(tip);\r\n        // var c = confirm(\"Are you sure you want to unlike tip?\");\r\n        // // if(confirm(\"Are you sure you want to unlike tip?\") === true)\r\n        // if (c === true)\r\n        // {\r\n        //     unlike(tip);\r\n        // }\r\n\r\n        console.log(\"sI lId=\", lId);\r\n\r\n    }\r\n\r\n\r\n    if (allTipData.author.email === loggedInUser)   // if the tip belongs to the user\r\n    {\r\n        getLikes(allTipData);\r\n        return (<><p>{tipLikes} Likes</p><br/></>)\r\n    }\r\n    if (isLiked === false)//(isLiked === \"\")\r\n    {\r\n        getIsLiked(allTipData);\r\n        getLikes(allTipData);\r\n        return (\r\n            <div>\r\n                {/* <p>..{allTipData.id}..</p> */}\r\n            {/* {displayAllTipData()} */}\r\n                {/* {getUserData()} */}\r\n            {/* <p>//{loggedInUser}//</p> */}\r\n            {/* <p>{res}</p> */}\r\n                {/* <p>.{getIsLiked(allTipData)}.{isLiked}.</p> */}\r\n                {/* <p>+{getLikes(allTipData)}, {tipLikes} - Likes</p> */}\r\n\r\n                {/* <p>{getLikes(allTipData)}</p> */}\r\n                <p>{tipLikes} Likes</p><br/>\r\n\r\n                {/* can put all like stuff in Likes instead */}\r\n                {/* <Likes tip={allTipData}/> */}\r\n\r\n\r\n                <button id=\"likeTipButton\" onClick={() => like(allTipData/*, index*/)}>Like</button>\r\n            </div>\r\n    \r\n        )\r\n    }\r\n    else\r\n    {\r\n        getIsLiked(allTipData);\r\n        getLikes(allTipData);\r\n        return (\r\n            <div>\r\n            {/* {displayAllTipData()} */}\r\n            {/* {getUserData()} */}\r\n                {/* <p>//{loggedInUser}//</p> */}\r\n            {/* <p>{res}</p> */}\r\n                {/* <p>.{() => getIsLiked(allTipData)}.{isLiked}.</p> */}\r\n                {/* <p>+{getLikes(allTipData)}, {tipLikes} - Likes</p> */}\r\n\r\n                {/* {() => getLikes(allTipData)} */}\r\n                <p>{tipLikes} Likes</p>\r\n                <button id=\"likeTipButton\" onClick={() => setInfo(allTipData/*unlike(allTipData/*, index*/)}>Unlike</button>\r\n                {/* <button id=\"likeTipButton\" onClick={() => unlike(allTipData/*unlike(allTipData/*, index*)}>Unlike2</button> */}\r\n            </div>\r\n    \r\n        )\r\n    }\r\n};\r\n\r\nexport default AllTip;\r\n\r\n\r\n/*\r\n    -   Like and Unlike buttons are meant to toggle \r\n        -> working now - I set isLiked to boolean\r\n\r\n    -   make sure only have to click button once - have to click delete twice \r\n        -> useEffect think is working\r\n\r\n    -*   can't like if not signed in - display data if not signed in - back end security authoriation ---- be careful!!!!!!\r\n\r\n    -   can't like if it your tip \r\n        -> done - removed button if tip belongs to logged in user\r\n\r\n    -*   do likes filter\r\n\r\n    -   remove filter button\r\n        -> done\r\n\r\n    -   make sure tipString can't have banned words \r\n        -> done - banned words in json file\r\n\r\n    -   put number of likes if your tips section\r\n        -> done\r\n\r\n    -*   update / refresh everything immediately\r\n\r\n    -   make sure flow is as expected\r\n\r\n    -   your tips section both createAt and updatedAt datetimes\r\n        -> done\r\n\r\n    -   pagination for tips if can\r\n\r\n    -   edit tips pop up form?\r\n\r\n*/",{"ruleId":"163","severity":1,"message":"164","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":11},{"ruleId":"163","severity":1,"message":"167","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":14},{"ruleId":"163","severity":1,"message":"167","line":25,"column":9,"nodeType":"165","messageId":"166","endLine":25,"endColumn":13},{"ruleId":"163","severity":1,"message":"168","line":27,"column":16,"nodeType":"165","messageId":"166","endLine":27,"endColumn":26},{"ruleId":"163","severity":1,"message":"169","line":27,"column":28,"nodeType":"165","messageId":"166","endLine":27,"endColumn":37},{"ruleId":"163","severity":1,"message":"170","line":27,"column":39,"nodeType":"165","messageId":"166","endLine":27,"endColumn":47},{"ruleId":"163","severity":1,"message":"171","line":28,"column":10,"nodeType":"165","messageId":"166","endLine":28,"endColumn":26},{"ruleId":"163","severity":1,"message":"172","line":29,"column":8,"nodeType":"165","messageId":"166","endLine":29,"endColumn":13},{"ruleId":"163","severity":1,"message":"173","line":30,"column":8,"nodeType":"165","messageId":"166","endLine":30,"endColumn":19},{"ruleId":"163","severity":1,"message":"174","line":37,"column":26,"nodeType":"165","messageId":"166","endLine":37,"endColumn":41},{"ruleId":"175","severity":1,"message":"176","line":16,"column":17,"nodeType":"177","endLine":16,"endColumn":28},{"ruleId":"175","severity":1,"message":"176","line":17,"column":17,"nodeType":"177","endLine":17,"endColumn":28},{"ruleId":"175","severity":1,"message":"176","line":19,"column":69,"nodeType":"177","endLine":19,"endColumn":80},{"ruleId":"163","severity":1,"message":"178","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":27,"column":13,"nodeType":"177","endLine":27,"endColumn":24},{"ruleId":"175","severity":1,"message":"176","line":38,"column":13,"nodeType":"177","endLine":38,"endColumn":24},{"ruleId":"163","severity":1,"message":"179","line":590,"column":8,"nodeType":"165","messageId":"166","endLine":590,"endColumn":15},{"ruleId":"163","severity":1,"message":"180","line":594,"column":26,"nodeType":"165","messageId":"166","endLine":594,"endColumn":41},{"ruleId":"163","severity":1,"message":"181","line":695,"column":11,"nodeType":"165","messageId":"166","endLine":695,"endColumn":22},{"ruleId":"163","severity":1,"message":"182","line":831,"column":12,"nodeType":"165","messageId":"166","endLine":831,"endColumn":19},{"ruleId":"163","severity":1,"message":"183","line":831,"column":21,"nodeType":"165","messageId":"166","endLine":831,"endColumn":31},{"ruleId":"163","severity":1,"message":"184","line":862,"column":19,"nodeType":"165","messageId":"166","endLine":862,"endColumn":22},{"ruleId":"185","severity":1,"message":"186","line":893,"column":48,"nodeType":"187","messageId":"188","endLine":893,"endColumn":50},{"ruleId":"185","severity":1,"message":"189","line":926,"column":48,"nodeType":"187","messageId":"190","endLine":926,"endColumn":50},{"ruleId":"163","severity":1,"message":"191","line":1067,"column":12,"nodeType":"165","messageId":"166","endLine":1067,"endColumn":19},{"ruleId":"163","severity":1,"message":"192","line":1068,"column":12,"nodeType":"165","messageId":"166","endLine":1068,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":1131,"column":8,"nodeType":"195","endLine":1131,"endColumn":43,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":17,"column":17,"nodeType":"199","messageId":"200","endLine":17,"endColumn":19},{"ruleId":"163","severity":1,"message":"201","line":52,"column":9,"nodeType":"165","messageId":"166","endLine":52,"endColumn":11},{"ruleId":"193","severity":1,"message":"202","line":76,"column":6,"nodeType":"195","endLine":76,"endColumn":19,"suggestions":"203"},{"ruleId":"163","severity":1,"message":"167","line":2,"column":9,"nodeType":"165","messageId":"166","endLine":2,"endColumn":13},{"ruleId":"163","severity":1,"message":"169","line":4,"column":16,"nodeType":"165","messageId":"166","endLine":4,"endColumn":25},{"ruleId":"163","severity":1,"message":"170","line":4,"column":27,"nodeType":"165","messageId":"166","endLine":4,"endColumn":35},{"ruleId":"163","severity":1,"message":"171","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":26},{"ruleId":"163","severity":1,"message":"204","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"205","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":23},{"ruleId":"163","severity":1,"message":"169","line":1,"column":35,"nodeType":"165","messageId":"166","endLine":1,"endColumn":44},{"ruleId":"163","severity":1,"message":"205","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":23},{"ruleId":"163","severity":1,"message":"171","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":26},{"ruleId":"163","severity":1,"message":"206","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":13},{"ruleId":"163","severity":1,"message":"207","line":14,"column":38,"nodeType":"165","messageId":"166","endLine":14,"endColumn":43},{"ruleId":"193","severity":1,"message":"208","line":116,"column":8,"nodeType":"195","endLine":116,"endColumn":10,"suggestions":"209"},{"ruleId":"163","severity":1,"message":"210","line":390,"column":12,"nodeType":"165","messageId":"166","endLine":390,"endColumn":15},{"ruleId":"163","severity":1,"message":"211","line":392,"column":11,"nodeType":"165","messageId":"166","endLine":392,"endColumn":20},{"ruleId":"193","severity":1,"message":"212","line":473,"column":8,"nodeType":"195","endLine":473,"endColumn":22,"suggestions":"213"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useOutletContext' is defined but never used.","'axios' is defined but never used.","'UserContext' is defined but never used.","'setLoggedInUser' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Header' is defined but never used.","'badLang' is defined but never used.","'setLoggedinUser' is assigned a value but never used.","'bannedWords' is assigned a value but never used.","'likearr' is assigned a value but never used.","'setLikearr' is assigned a value but never used.","'fil' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","'dataCat' is assigned a value but never used.","'dataStr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkLoggedIn', 'getAllData', and 'getAllTipData'. Either include them or remove the dependency array.","ArrayExpression",["214"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ss' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'calculateStats', 'correctAnswers.length', and 'submitQuiz'. Either include them or remove the dependency array.",["215"],"'React' is defined but never used.","'useRef' is defined but never used.","'Likes' is defined but never used.","'order' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["216"],"'uId' is assigned a value but never used.","'getUserId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allTipData', 'getIsLiked', and 'unlike'. Either include them or remove the dependency array.",["217"],{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [userdata, orderSort, oSort, cSort, checkLoggedIn, getAllData, getAllTipData]",{"range":"226","text":"227"},"Update the dependencies array to be: [calculateStats, correctAnswers.length, submitQuiz, userAnswers]",{"range":"228","text":"229"},"Update the dependencies array to be: [getUserData]",{"range":"230","text":"231"},"Update the dependencies array to be: [lId, isLiked, unlike, allTipData, getIsLiked]",{"range":"232","text":"233"},[46983,47018],"[userdata, orderSort, oSort, cSort, checkLoggedIn, getAllData, getAllTipData]",[2229,2242],"[calculateStats, correctAnswers.length, submitQuiz, userAnswers]",[4881,4883],"[getUserData]",[16176,16190],"[lId, isLiked, unlike, allTipData, getIsLiked]"]